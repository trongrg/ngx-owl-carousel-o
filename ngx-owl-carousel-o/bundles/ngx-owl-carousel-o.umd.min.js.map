{"version":3,"sources":["ng://ngx-owl-carousel-o/lib/services/resize.service.ts","null","ng://ngx-owl-carousel-o/lib/carousel/owl-carousel-o-config.ts","ng://ngx-owl-carousel-o/lib/services/carousel.service.ts","ng://ngx-owl-carousel-o/lib/services/navigation.service.ts","ng://ngx-owl-carousel-o/lib/services/window-ref.service.ts","ng://ngx-owl-carousel-o/lib/services/document-ref.service.ts","ng://ngx-owl-carousel-o/lib/services/autoplay.service.ts","ng://ngx-owl-carousel-o/lib/services/lazyload.service.ts","ng://ngx-owl-carousel-o/lib/services/animate.service.ts","ng://ngx-owl-carousel-o/lib/services/autoheight.service.ts","ng://ngx-owl-carousel-o/lib/services/hash.service.ts","ng://ngx-owl-carousel-o/lib/carousel/carousel.component.ts","ng://ngx-owl-carousel-o/lib/carousel/stage/stage.component.ts","ng://ngx-owl-carousel-o/lib/carousel/carousel.module.ts"],"names":["ResizeService","eventManager","this","resizeSubject","Subject","addGlobalEventListener","onResize","bind","onLoaded","Object","defineProperty","prototype","asObservable","event","next","windowWidth","Injectable","EventManager","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","call","apply","OwlCarouselOConfig","OwlOptionsMockedTypes","CarouselService","_this","items","rtl","isResponsive","isRefreshed","isLoaded","isLoading","isMouseDragable","isGrab","isTouchDragable","transform","transition","width","paddingL","paddingR","current","tags","initializing","animating","dragging","filter","run","cache","_items","relative","_current","id","margin","settings","grid","autoWidth","css","margin-left","margin-right","slidesData","forEach","slide","marginL","marginR","toFixed","widths","merge","iterator","_mergers","mergeFit","Math","min","_widths","clones","view","max","size","ceil","append","prepend","repeat","loop","rewind","push","normalize","unshift","_clones","map","clonedIdPrefix","isActive","isCloned","concat","coordinates","previous","_coordinates","padding","stagePadding","abs","padding-left","padding-right","stageData","findIndex","minimum","maximum","reset","animate","begin","end","inner","outer","matches","center","result","element","_op","item","isCentered","_a","o","m","Symbol","value","done","tslib_1.__values","_b","classes","previous-1","previous-2","next-1","next-2","_invalidated","_states","getViewCurSettings","_viewSettingsShipper$","getInitializedState","_initializedCarousel$","getChangeState","_changeSettingsCarousel$","getChangedState","_changedSettingsCarousel$","getTranslateState","_translateCarousel$","getTranslatedState","_translatedCarousel$","getResizeState","_resizeCarousel$","getResizedState","_resizedCarousel$","getRefreshState","_refreshCarousel$","getRefreshedState","_refreshedCarousel$","getDragState","_dragCarousel$","getDraggedState","_draggedCarousel$","setOptions","options","configOptions","checkedOptions","_validateOptions","_options","mockedTypes","key","this_1","_isNumeric","_validateItems","setRightOption","_isNumberOrBoolean","_isNumberOrString","_isStringOrBoolean","isArray","isString_1","type","console","log","setCarouselWidth","_width","setup","carouselWidth","slides","setItems","_defineSlidesData","setViewportItemsN","_trigger","property","name","invalidate","viewport","overwrites","responsive","match","keys","Number","owlDOMData","_breakpoint","initialize","enter","mergeN","dataMerge","startPosition","refresh","mouseDrag","touchDrag","sendChanges","leave","navData","dotsData","_optionsLogic","update","_pipe","filteredPipe","all","setCurSlideClasses","is","dimension","Width","curWidth","prepareDragging","stage","transformArr","x","replace","split","y","speed","enterDragging","defineNewCoordsDrag","dragData","pull","delta","difference","pointer","start","pullDrag","finishDragging","dragObj","clickAttacher","currentSlideI","direction","dragEndSpeed","smartSpeed","closest","undefined","Date","getTime","time","coordinate","position","onTransitionEnd","state","part","_speed","_suppress","_release","reciprocalItemsWidth","elementWidth","slice","mergers","odd","even","index","v","multiplier","newPosition","_duration","from","to","factor","revert","distance","setTimeout","prev","_viewport","warn","content","loadMap","Map","load","set","tplRef","get","hashFragment","dataHash","currentClasses","active","cloned","animated","isAnimated","owl-animated-in","isDefAnimatedIn","owl-animated-out","isDefAnimatedOut","animateIn","isCustomAnimatedIn","animateOut","isCustomAnimatedOut","a","data","namespace","stateName","register","object","Type","tag","indexOf","events","_supress","originalEvent","window","touches","changedTouches","pageX","pageY","clientX","clientY","number","isNaN","parseFloat","first","second","NavigationService","carouselService","disabled","htmlText","dots","spyDataStreams","ngOnDestroy","navSubscription","unsubscribe","initializedCarousel$","pipe","tap","_updateNavPages","draw","changedSettings$","refreshedCarousel$","navMerge$","subscribe","_navData","navText","_dotsData","j","lower","upper","pages","dotsEach","slideBy","_pages","nav","innerContent","dotContent","showInnerContent","startI","splice","_updateNavButtons","_updateDots","curActiveDotI","page","pop","_getPosition","successor","standard","moveByDot","dotId","dot","dotsSpeed","toSlideById","WINDOW","InjectionToken","WindowRef","Error","BrowserWindowRef","_super","tslib_1.__extends","windowFactory","browserWindowRef","platformId","isPlatformBrowser","nativeWindow","browserWindowProvider","provide","useClass","windowProvider","useFactory","deps","PLATFORM_ID","WINDOW_PROVIDERS","DOCUMENT","DocumentRef","BrowserDocumentRef","document","documentFactory","browserDocumentRef","nativeDocument","browserDocumentProvider","documentProvider","DOCUMENT_PROVIDERS","AutoplayService","winRef","docRef","autoplaySubscription","autoplay","play","_handleChangeObservable","autoplayMerge$","timeout","_paused","_setAutoPlayInterval","_getNextTimeout","_timeout","clearTimeout","hidden","autoplaySpeed","autoplayTimeout","stop","pause","startPausing","autoplayHoverPause","startPlayingMouseLeave","startPlayingTouchEnd","Inject","args","LazyLoadService","lazyLoadSubscription","isLazyLoad","lazyLoad","changeSettings$","resizedCarousel$","lazyLoadMerge$","_defineLazyLoadSlides","lazyLoadEager","_load","AnimateService","animateSubscription","dragCarousel$","draggedCarousel$","translatedCarousel$","dragTranslatedMerge$","swapping","translateCarousel$","_swap","animateMerge$","left","incoming","outgoing","clear","AutoHeightService","autoHeightSubscription","autoHeight","heightState","autoHeight$","HashService","hashSubscription","URLhashListener","newCurSlide","newCurFragment","currentHashFragment","hashFragment$","fragment","nextId","CarouselSlideDirective","_dataMerge","isNumeric","Directive","selector","TemplateRef","Input","SlidesOutputData","CarouselComponent","el","resizeService","navigationService","autoplayService","lazyLoadService","animateService","autoHeightService","hashService","EventEmitter","ngOnInit","carouselWindowWidth","nativeElement","querySelector","clientWidth","ngAfterContentChecked","ngAfterContentInit","toArray","_winResizeWatcher","resizeSubscription","_allObservSubscription","_viewCurSettings$","carouselLoaded","gatherTranslatedData","translated","emit","slidesOutputData","_carouselMerge$","onResize$","delay","responsiveRefreshRate","navSpeed","activeSlides","startPlayML","startPlayTE","Component","template","providers","ElementRef","ContentChildren","Output","StageComponent","zone","renderer","target","moving","ev","_oneMouseTouchMove","_onDragMove","_onDragEnd","listenerOneClick","listen","_drag","onMouseDown","owlDraggable","_onDragStart","onTouchStart","onTouchCancel","onDragStart","onSelectStart","_oneMoveSubsription","_oneDragMove$","_sendChanges","which","_prepareDragging","_pointer","listenerMouseUp","bindOnDragEnd","listenerTouchEnd","runOutsideAngular","listenerOneMouseMove","bindOneMouseTouchMove","listenerOneTouchMove","_difference","_is","listenerMouseMove","bindOnDragMove","listenerTouchMove","preventDefault","_enterDragging","stageOrExit","_animate","setStyle","children","_finishDragging","_oneClickHandler","firstC","_enter","animations","trigger","style","height","NgZone","Renderer2","HostListener","routes","NgModule","imports","CommonModule","RouterModule","forChild","declarations","exports"],"mappings":"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","sourcesContent":["import { EventManager } from '@angular/platform-browser';\nimport { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ResizeService {\n  /**\n   * Width of window\n   */\n  public windowWidth: any;\n\n  /**\n   * Makes resizeSubject become Observable\n   * @returns Observable of resizeSubject\n   */\n  get onResize$(): Observable<Window> {\n    return this.resizeSubject.asObservable();\n  }\n\n  /**\n   * Subject of 'resize' event\n   */\n  private resizeSubject: Subject<Window>;\n\n  constructor(private eventManager: EventManager) {\n    this.resizeSubject = new Subject();\n    this.eventManager.addGlobalEventListener(\n      'window',\n      'resize',\n      this.onResize.bind(this)\n    );\n    this.eventManager.addGlobalEventListener(\n      'window',\n      'onload',\n      this.onLoaded.bind(this)\n    );\n  }\n\n  /**\n   * Handler of 'resize' event. Passes data throw resizeSubject\n   * @param event Event Object of 'resize' event\n   */\n  private onResize(event: UIEvent) {\n    this.resizeSubject.next(<Window>event.target);\n  }\n\n  /**\n   * Handler of 'onload' event. Defines the width of window\n   * @param event Event Object of 'onload' event\n   */\n  private onLoaded(event: UIEvent) {\n    this.windowWidth = <Window>event.target;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OwlOptions } from \"../models/owl-options.model\";\n\n/**\n * Defaults value of options\n */\nexport class OwlCarouselOConfig implements OwlOptions {\n  items = 3;\n  loop = false;\n  center = false;\n  rewind = false;\n\n  mouseDrag = true;\n  touchDrag = true;\n  pullDrag = true;\n  freeDrag = false;\n\n  margin = 0;\n  stagePadding = 0;\n\n  merge = false;\n  mergeFit = true;\n  autoWidth = false;\n\n  startPosition = 0;\n  rtl = false;\n\n  smartSpeed = 250;\n  fluidSpeed = false;\n  dragEndSpeed = false;\n\n  responsive = {};\n  responsiveRefreshRate = 200;\n\n  // defaults to Navigation\n  nav = false;\n  navText = [ 'prev', 'next' ];\n  navSpeed = false;\n  slideBy = 1; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n  dots = true;\n  dotsEach = false;\n  dotsData = false;\n  dotsSpeed = false;\n\n  // defaults to Autoplay\n  autoplay = false;\n  autoplayTimeout = 5000;\n  autoplayHoverPause = false;\n  autoplaySpeed = false;\n\n  // defaults to LazyLoading\n  lazyLoad = false;\n  lazyLoadEager = 0;\n\n  // defaults to Animate\n  animateOut = false;\n  animateIn = false;\n\n  // defaults to AutoHeight\n  autoHeight = false;\n\n  // defaults to Hash\n  URLhashListener = false;\n  constructor() { }\n}\n\n/**\n * we can't read types from OwlOptions in javascript because of props have undefined value and types of those props are used for validating inputs\n * class below is copy of OwlOptions but its all props have string value showing certain type;\n * this is class is being used just in method _validateOptions() of CarouselService;\n */\nexport class OwlOptionsMockedTypes {\n  items = 'number';\n  loop = 'boolean';\n  center = 'boolean';\n  rewind = 'boolean';\n\n  mouseDrag = 'boolean';\n  touchDrag = 'boolean';\n  pullDrag = 'boolean';\n  freeDrag = 'boolean';\n\n  margin = 'number';\n  stagePadding = 'number';\n\n  merge = 'boolean';\n  mergeFit = 'boolean';\n  autoWidth = 'boolean';\n\n  startPosition = 'number|string';\n  rtl = 'boolean';\n\n  smartSpeed = 'number';\n  fluidSpeed = 'boolean';\n  dragEndSpeed = 'number|boolean';\n\n  responsive = {};\n  responsiveRefreshRate = 'number';\n\n  // defaults to Navigation\n  nav = 'boolean';\n  navText = 'string[]';\n  navSpeed = 'number|boolean';\n  slideBy = 'number|string'; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n  dots = 'boolean';\n  dotsEach = 'number|boolean';\n  dotsData = 'boolean';\n  dotsSpeed = 'number|boolean';\n\n  // defaults to Autoplay\n  autoplay = 'boolean';\n  autoplayTimeout = 'number';\n  autoplayHoverPause = 'boolean';\n  autoplaySpeed = 'number|boolean';\n\n  // defaults to LazyLoading\n  lazyLoad = 'boolean';\n  lazyLoadEager = 'number';\n\n  // defaults to Animate\n  animateOut = 'string|boolean';\n  animateIn = 'string|boolean';\n\n  // defaults to AutoHeight\n  autoHeight = 'boolean';\n\n  // defaults to Hash\n  URLhashListener = \"boolean\";\n  constructor() { }\n}","import { StageData } from '../models/stage-data.model';\n\nimport { OwlDOMData } from '../models/owlDOM-data.model';\n\nimport { Injectable } from '@angular/core';\n\nimport { CarouselSlideDirective } from '../carousel/carousel.module';\nimport { SlideModel } from '../models/slide.model';\nimport { Subject, Observable } from 'rxjs';\nimport { OwlCarouselOConfig, OwlOptionsMockedTypes } from '../carousel/owl-carousel-o-config';\nimport { OwlOptions } from '../models/owl-options.model';\n\nimport { NavData, DotsData } from '../models/navigation-data.models';\n\n/**\n * Current state information and their tags.\n */\nexport class States {\n  current: {};\n  tags: {\n    [key: string]: string[];\n  };\n}\n\n/**\n * Enumeration for types.\n * @enum {String}\n */\nexport enum Type {\n  Event = 'event',\n  State = 'state'\n};\n\n/**\n * Enumeration for width.\n * @enum {String}\n */\nexport enum Width {\n  Default = 'default',\n  Inner = 'inner',\n  Outer = 'outer'\n};\n\n/**\n * Model for coords of .owl-stage\n */\nexport class Coords {\n  x: number;\n  y: number;\n}\n\n/**\n * Model for all current data of carousel\n */\nexport class CarouselCurrentData {\n  owlDOMData: OwlDOMData;\n  stageData: StageData;\n  slidesData: SlideModel[];\n  navData: NavData;\n  dotsData: DotsData;\n}\n\n@Injectable()\nexport class CarouselService {\n  /**\n   * Subject for passing data needed for managing View\n   */\n  private _viewSettingsShipper$ = new Subject<CarouselCurrentData>();\n  /**\n   * Subject for notification when the carousel got initializes\n   */\n  private _initializedCarousel$ = new Subject<string>();\n\n  /**\n   * Subject for notification when the carousel's settings start changinf\n   */\n  private _changeSettingsCarousel$ = new Subject<any>();\n\n  /**\n   * Subject for notification when the carousel's settings have changed\n   */\n  private _changedSettingsCarousel$ = new Subject<any>();\n  /**\n   * Subject for notification when the carousel starts translating or moving\n   */\n  private _translateCarousel$ = new Subject<string>();\n  /**\n   * Subject for notification when the carousel stopped translating or moving\n   */\n  private _translatedCarousel$ = new Subject<string>();\n  /**\n   * Subject for notification when the carousel's rebuilding caused by 'resize' event starts\n   */\n  private _resizeCarousel$ = new Subject<string>();\n  /**\n   * Subject for notification  when the carousel's rebuilding caused by 'resize' event is ended\n   */\n  private _resizedCarousel$ = new Subject<string>();\n  /**\n   * Subject for notification when the refresh of carousel starts\n   */\n  private _refreshCarousel$ = new Subject<string>();\n  /**\n   * Subject for notification when the refresh of carousel is ended\n   */\n  private _refreshedCarousel$ = new Subject<string>();\n  /**\n   * Subject for notification when the dragging of carousel starts\n   */\n  private _dragCarousel$ = new Subject<string>();\n  /**\n   * Subject for notification when the dragging of carousel is ended\n   */\n  private _draggedCarousel$ = new Subject<string>();\n\n  /**\n   * Current settings for the carousel.\n   */\n  settings: OwlOptions = {\n    items: 0\n  };\n\n  /**\n   * Initial data for setting classes to element .owl-carousel\n   */\n  owlDOMData: OwlDOMData = {\n    rtl: false,\n    isResponsive: false,\n    isRefreshed: false,\n    isLoaded: false,\n    isLoading: false,\n    isMouseDragable: false,\n    isGrab: false,\n    isTouchDragable: false\n  };\n\n  /**\n   * Initial data of .owl-stage\n   */\n  stageData: StageData = {\n    transform: 'translate3d(0px,0px,0px)',\n    transition: '0s',\n    width: 0,\n    paddingL: 0,\n    paddingR: 0\n  };\n\n  /**\n   *  Data of every slide\n   */\n  slidesData: SlideModel[];\n\n  /**\n   * Data of navigation block\n   */\n  navData: NavData;\n\n  /**\n   * Data of dots block\n   */\n  dotsData: DotsData;\n\n  /**\n   * Carousel width\n   */\n  private _width: number;\n\n  /**\n   * All real items.\n   */\n  private _items: CarouselSlideDirective[] = []; // is equal to this.slides\n\n  /**\n   * Array with width of every slide.\n   */\n  private _widths: any[] = [];\n\n  /**\n   * Currently suppressed events to prevent them from beeing retriggered.\n   */\n  private _supress: any = {};\n\n  /**\n   * References to the running plugins of this carousel.\n   */\n  private _plugins: any = {};\n\n  /**\n   * Absolute current position.\n   */\n  private _current: number | null = null;\n\n  /**\n   * All cloned items.\n   */\n  private _clones: any[] = [];\n\n  /**\n   * Merge values of all items.\n   * @todo Maybe this could be part of a plugin.\n   */\n  readonly _mergers: any[] = [];\n\n  /**\n   * Animation speed in milliseconds.\n   */\n  private _speed: number | null = null;\n\n  /**\n   * Coordinates of all items in pixel.\n   * @todo The name of this member is missleading.\n   */\n  private _coordinates: number[] = [];\n\n  /**\n   * Current breakpoint.\n   * @todo Real media queries would be nice.\n   */\n  private _breakpoint: any = null;\n\n  /**\n   * Prefix for id of cloned slides\n   */\n  clonedIdPrefix = 'cloned-';\n\n  /**\n   * Current options set by the caller including defaults.\n   */\n  _options: OwlOptions = {};\n\n  /**\n   * Invalidated parts within the update process.\n   */\n  private _invalidated: any = {};\n\n  // Is needed for tests\n  get invalidated() {\n    return this._invalidated;\n  }\n\n  /**\n   * Current state information and their tags.\n   */\n  private _states: States = {\n    current: {},\n    tags: {\n      initializing: ['busy'],\n      animating: ['busy'],\n      dragging: ['interacting']\n    }\n  };\n\n  // is needed for tests\n  get states() {\n    return this._states;\n  }\n\n  /**\n   * Ordered list of workers for the update process.\n   */\n  private _pipe: any[] = [\n    // {\n    //   filter: ['width', 'settings'],\n    //   run: () => {\n    //     this._width = this.carouselWindowWidth;\n    //   }\n    // },\n    {\n      filter: ['width', 'items', 'settings'],\n      run: cache => {\n        cache.current = this._items && this._items[this.relative(this._current)].id;\n      }\n    },\n    // {\n    //   filter: ['items', 'settings'],\n    //   run: function() {\n    //     // this.$stage.children('.cloned').remove();\n    //   }\n    // },\n    {\n      filter: ['width', 'items', 'settings'],\n      run: (cache) => {\n        const margin = this.settings.margin || '',\n          grid = !this.settings.autoWidth,\n          rtl = this.settings.rtl,\n          css = {\n            'margin-left': rtl ? margin : '',\n            'margin-right': rtl ? '' : margin\n          };\n\n        if (!grid) {\n          this.slidesData.forEach(slide => {\n            slide.marginL = css['margin-left'];\n            slide.marginR = css['margin-right'];\n          });\n        }\n\n        cache.css = css;\n      }\n    }, {\n      filter: ['width', 'items', 'settings'],\n      run: (cache) => {\n        const width: any = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin,\n          grid = !this.settings.autoWidth,\n          widths = [];\n        let merge = null,\n          iterator = this._items.length;\n\n        cache.items = {\n          merge: false,\n          width: width\n        };\n\n        while (iterator--) {\n          merge = this._mergers[iterator];\n          merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\n          cache.items.merge = merge > 1 || cache.items.merge;\n\n          widths[iterator] = !grid ? this._items[iterator].width ? this._items[iterator].width : width : width * merge;\n        }\n\n        this._widths = widths;\n\n        this.slidesData.forEach((slide, i) => {\n          slide.width = this._widths[i];\n          slide.marginR = cache.css['margin-right'];\n          slide.marginL = cache.css['margin-left'];\n        });\n      }\n    }, {\n      filter: ['items', 'settings'],\n      run: () => {\n        const clones: any[] = [],\n          items: CarouselSlideDirective[] = this._items,\n          settings: any = this.settings,\n          // TODO: Should be computed from number of min width items in stage\n          view = Math.max(settings.items * 2, 4),\n          size = Math.ceil(items.length / 2) * 2;\n        let append: any[] = [],\n          prepend: any[] = [],\n          repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0;\n\n        repeat /= 2;\n\n        while (repeat--) {\n          // Switch to only using appended clones\n          clones.push(this.normalize(clones.length / 2, true));\n          append.push({...this.slidesData[clones[clones.length - 1]]});\n          clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\n          prepend.unshift({...this.slidesData[clones[clones.length - 1]]});\n        }\n\n        this._clones = clones;\n\n        append = append.map(slide => {\n          slide.id = `${this.clonedIdPrefix}${slide.id}`;\n          slide.isActive = false;\n          slide.isCloned = true;\n          return slide;\n        });\n\n        prepend = prepend.map(slide => {\n          slide.id = `${this.clonedIdPrefix}${slide.id}`;\n          slide.isActive = false;\n          slide.isCloned = true;\n          return slide;\n        });\n\n        this.slidesData = prepend.concat(this.slidesData).concat(append);\n      }\n    }, {\n      filter: ['width', 'items', 'settings'],\n      run: () => {\n        const rtl = this.settings.rtl ? 1 : -1,\n          size = this._clones.length + this._items.length,\n          coordinates = [];\n        let iterator = -1,\n          previous = 0,\n          current = 0;\n\n        while (++iterator < size) {\n          previous = coordinates[iterator - 1] || 0;\n          current = this._widths[this.relative(iterator)] + this.settings.margin;\n          coordinates.push(previous + current * rtl);\n        }\n\n        this._coordinates = coordinates;\n      }\n    }, {\n      filter: ['width', 'items', 'settings'],\n      run: () => {\n        const padding = this.settings.stagePadding,\n          coordinates = this._coordinates,\n          css = {\n            'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\n            'padding-left': padding || '',\n            'padding-right': padding || ''\n          };\n\n        this.stageData.width = css.width; // use this property in *ngIf directive for .owl-stage element\n        this.stageData.paddingL = css['padding-left'];\n        this.stageData.paddingR = css['padding-right'];\n      }\n    }, {\n      //   filter: [ 'width', 'items', 'settings' ],\n      //   run: cache => {\n      // \t\t// this method sets the width for every slide, but I set it in different way earlier\n      // \t\tconst grid = !this.settings.autoWidth,\n      // \t\titems = this.$stage.children(); // use this.slidesData\n      //     let iterator = this._coordinates.length;\n\n      //     if (grid && cache.items.merge) {\n      //       while (iterator--) {\n      //         cache.css.width = this._widths[this.relative(iterator)];\n      //         items.eq(iterator).css(cache.css);\n      //       }\n      //     } else if (grid) {\n      //       cache.css.width = cache.items.width;\n      //       items.css(cache.css);\n      //     }\n      //   }\n      // }, {\n      //   filter: [ 'items' ],\n      //   run: function() {\n      //     this._coordinates.length < 1 && this.$stage.removeAttr('style');\n      //   }\n      // }, {\n      filter: ['width', 'items', 'settings'],\n      run: cache => {\n        let current = cache.current ? this.slidesData.findIndex(slide => slide.id === cache.current) : 0;\n        current = Math.max(this.minimum(), Math.min(this.maximum(), current));\n        this.reset(current);\n      }\n    }, {\n      filter: ['position'],\n      run: () => {\n        this.animate(this.coordinates(this._current));\n      }\n    }, {\n      filter: ['width', 'position', 'items', 'settings'],\n      run: () => {\n        const rtl = this.settings.rtl ? 1 : -1,\n          padding = this.settings.stagePadding * 2,\n          matches = [];\n        let begin, end, inner, outer, i, n;\n\n        begin = this.coordinates(this.current());\n        if (typeof begin === 'number') {\n          begin += padding;\n        } else {\n          begin = 0;\n        }\n\n        end = begin + this.width() * rtl;\n\n        if (rtl === -1 && this.settings.center) {\n          const result = this._coordinates.filter(element => {\n            return this.settings.items % 2 === 1 ? element >= begin : element > begin;\n          });\n          begin = result.length ? result[result.length - 1] : begin;\n        }\n\n        for (i = 0, n = this._coordinates.length; i < n; i++) {\n          inner = Math.ceil(this._coordinates[i - 1] || 0);\n          outer = Math.ceil(Math.abs(this._coordinates[i]) + padding * rtl);\n\n          if ((this._op(inner, '<=', begin) && (this._op(inner, '>', end)))\n            || (this._op(outer, '<', begin) && this._op(outer, '>', end))) {\n            matches.push(i);\n          }\n        }\n\n        this.slidesData.forEach(slide => {\n          slide.isActive = false;\n          return slide;\n        });\n        matches.forEach(item => {\n          this.slidesData[item].isActive = true;\n        });\n\n        if (this.settings.center) {\n          this.slidesData.forEach(slide => {\n            slide.isCentered = false;\n            return slide;\n          });\n          const current: any = this.current();\n          for (const s of this.slidesData) {\n            s.classes = {};\n          }\n          this.slidesData[current].isCentered = true;\n          this.slidesData[current - 1].classes = {'previous-1': true};\n          this.slidesData[current - 2].classes = {'previous-2': true};\n          this.slidesData[current + 1].classes = {'next-1': true};\n          this.slidesData[current + 2].classes = {'next-2': true};\n        }\n      }\n    }\n  ];\n\n  constructor() {\n  }\n\n  /**\n   * Makes _viewSettingsShipper$ Subject become Observable\n   * @returns Observable of _viewSettingsShipper$ Subject\n   */\n  getViewCurSettings(): Observable<CarouselCurrentData> {\n    return this._viewSettingsShipper$.asObservable();\n  }\n\n  /**\n   * Makes _initializedCarousel$ Subject become Observable\n   * @returns Observable of _initializedCarousel$ Subject\n   */\n  getInitializedState(): Observable<string> {\n    return this._initializedCarousel$.asObservable()\n  }\n\n  /**\n   * Makes _changeSettingsCarousel$ Subject become Observable\n   * @returns Observable of _changeSettingsCarousel$ Subject\n   */\n  getChangeState(): Observable<any> {\n    return this._changeSettingsCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _changedSettingsCarousel$ Subject become Observable\n   * @returns Observable of _changedSettingsCarousel$ Subject\n   */\n  getChangedState(): Observable<any> {\n    return this._changedSettingsCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _translateCarousel$ Subject become Observable\n   * @returns Observable of _translateCarousel$ Subject\n   */\n  getTranslateState(): Observable<string> {\n    return this._translateCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _translatedCarousel$ Subject become Observable\n   * @returns Observable of _translatedCarousel$ Subject\n   */\n  getTranslatedState(): Observable<string> {\n    return this._translatedCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _resizeCarousel$ Subject become Observable\n   * @returns Observable of _resizeCarousel$ Subject\n   */\n  getResizeState(): Observable<string> {\n    return this._resizeCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _resizedCarousel$ Subject become Observable\n   * @returns Observable of _resizedCarousel$ Subject\n   */\n  getResizedState(): Observable<string> {\n    return this._resizedCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _refreshCarousel$ Subject become Observable\n   * @returns Observable of _refreshCarousel$ Subject\n   */\n  getRefreshState(): Observable<string> {\n    return this._refreshCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _refreshedCarousel$ Subject become Observable\n   * @returns Observable of _refreshedCarousel$ Subject\n   */\n  getRefreshedState(): Observable<string> {\n    return this._refreshedCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _dragCarousel$ Subject become Observable\n   * @returns Observable of _dragCarousel$ Subject\n   */\n  getDragState(): Observable<string> {\n    return this._dragCarousel$.asObservable();\n  }\n\n  /**\n   * Makes _draggedCarousel$ Subject become Observable\n   * @returns Observable of _draggedCarousel$ Subject\n   */\n  getDraggedState(): Observable<string> {\n    return this._draggedCarousel$.asObservable();\n  }\n\n  /**\n   * Setups custom options expanding default options\n   * @param options custom options\n   */\n  setOptions(options: OwlOptions) {\n    const configOptions: OwlOptions = new OwlCarouselOConfig();\n    const checkedOptions: OwlOptions = this._validateOptions(options, configOptions);\n    this._options = {...configOptions, ...checkedOptions};\n  }\n\n  /**\n   * Checks whether user's option are set properly. Cheking is based on typings;\n   * @param options options set by user\n   * @param configOptions default options\n   * @returns checked and modified (if it's needed) user's options\n   *\n   * Notes:\n   *  - if user set option with wrong type, it'll be written in console\n   */\n  private _validateOptions(options: OwlOptions, configOptions: OwlOptions): OwlOptions {\n    const checkedOptions: OwlOptions = {...options};\n    const mockedTypes = new OwlOptionsMockedTypes();\n\n    for (const key in checkedOptions) {\n      if (checkedOptions.hasOwnProperty(key)) {\n\n        // condition could be shortened but it gets harder for understanding\n        if (mockedTypes[key] === 'number') {\n          if (this._isNumeric(checkedOptions[key])) {\n            checkedOptions[key] = +checkedOptions[key];\n            checkedOptions[key] = key === 'items' ? this._validateItems(checkedOptions[key]) : checkedOptions[key];\n          } else {\n            checkedOptions[key] = setRightOption(mockedTypes[key], key);\n          }\n        } else if (mockedTypes[key] === 'boolean' && typeof checkedOptions[key] !== 'boolean') {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'number|boolean' && !this._isNumberOrBoolean(checkedOptions[key])) {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'number|string' && !this._isNumberOrString(checkedOptions[key])) {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'string|boolean' && !this._isStringOrBoolean(checkedOptions[key])) {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'string[]') {\n          if (Array.isArray(checkedOptions[key])) {\n            let isString = false;\n            checkedOptions[key].forEach(element => {\n              isString = typeof element === 'string' ? true : false;\n            });\n            if (!isString) {\n              checkedOptions[key] = setRightOption(mockedTypes[key], key)\n            }\n            ;\n          } else {\n            checkedOptions[key] = setRightOption(mockedTypes[key], key);\n          }\n        }\n      }\n    }\n\n    function setRightOption(type: string, key: any): any {\n      console.log(`options.${key} must be type of ${type}; ${key}=${options[key]} skipped to defaults: ${key}=${configOptions[key]}`);\n      return configOptions[key];\n    }\n\n    return checkedOptions;\n  }\n\n  /**\n   * Checks option items set by user and if it bigger than number of slides then returns number of slides\n   * @param items option items set by user\n   * @returns right number of items\n   */\n  private _validateItems(items: number): number {\n    let result: number;\n    if (items >= this._items.length) {\n      result = this._items.length;\n      console.log('option \\'items\\' in your options is bigger than number of slides; This option is updated to current number of slides and navigation got disabled');\n    } else {\n      result = items;\n    }\n    return result;\n  }\n\n  /**\n   * Set current width of carousel\n   * @param width width of carousel Window\n   */\n  setCarouselWidth(width: number) {\n    this._width = width;\n  }\n\n  /**\n   * Setups the current settings.\n   * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\n   * @todo Support for media queries by using `matchMedia` would be nice.\n   * @param carouselWidth width of carousel\n   * @param slides array of slides\n   * @param options options set by user\n   */\n  setup(carouselWidth: number, slides: CarouselSlideDirective[], options: OwlOptions) {\n    this.setCarouselWidth(carouselWidth);\n    this.setItems(slides);\n    this._defineSlidesData();\n    this.setOptions(options);\n\n    this.settings = {...this._options};\n\n    this.setViewportItemsN();\n\n    this._trigger('change', {property: {name: 'settings', value: this.settings}});\n    this.invalidate('settings'); // must be call of this function;\n    this._trigger('changed', {property: {name: 'settings', value: this.settings}});\n  }\n\n  /**\n   * Set number of items for current viewport\n   */\n  setViewportItemsN() {\n    const viewport = this._width,\n      overwrites = this._options.responsive;\n    let match = -1;\n\n    if (!Object.keys(overwrites).length) {\n      return;\n    }\n\n    for (const key in overwrites) {\n      if (overwrites.hasOwnProperty(key)) {\n        if (+key <= viewport && +key > match) {\n          match = Number(key);\n        }\n      }\n    }\n\n    this.settings = {...this.settings, items: this._validateItems(overwrites[match].items)};\n    // if (typeof this.settings.stagePadding === 'function') {\n    // \tthis.settings.stagePadding = this.settings.stagePadding();\n    // }\n    delete this.settings.responsive;\n    this.owlDOMData.isResponsive = true;\n    this._breakpoint = match;\n\n    this.invalidate('settings');\n  }\n\n  /**\n   * Initializes the carousel.\n   * @param slides array of CarouselSlideDirective\n   */\n  initialize(slides: CarouselSlideDirective[]) {\n    this.enter('initializing');\n    // this.trigger('initialize');\n\n    this.owlDOMData.rtl = this.settings.rtl;\n\n    slides.forEach(item => {\n      const mergeN: number = this.settings.merge ? item.dataMerge : 1;\n      this._mergers.push(mergeN);\n    });\n\n    this.reset(this._isNumeric(this.settings.startPosition) ? +this.settings.startPosition : 0);\n\n    this.invalidate('items');\n    this.refresh();\n\n    this.owlDOMData.isLoaded = true;\n    this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\n    this.owlDOMData.isTouchDragable = this.settings.touchDrag;\n\n    this.sendChanges();\n\n    this.leave('initializing');\n    this._trigger('initialized');\n  };\n\n  /**\n   * Sends all data needed for View\n   */\n  sendChanges() {\n    this._viewSettingsShipper$.next({\n      owlDOMData: this.owlDOMData,\n      stageData: this.stageData,\n      slidesData: this.slidesData,\n      navData: this.navData,\n      dotsData: this.dotsData\n    });\n  }\n\n\n  /**\n   * Updates option logic if necessery\n   */\n  private _optionsLogic() {\n    if (this.settings.autoWidth) {\n      this.settings.stagePadding = 0;\n      this.settings.merge = false;\n    }\n  }\n\n  /**\n   * Updates the view\n   */\n  update() {\n    let i = 0;\n    const n = this._pipe.length,\n      filter = item => this._invalidated[item],\n      cache = {};\n\n    while (i < n) {\n      const filteredPipe = this._pipe[i].filter.filter(filter);\n      if (this._invalidated.all || filteredPipe.length > 0) {\n        this._pipe[i].run(cache);\n      }\n      i++;\n    }\n    this.slidesData.forEach(slide => slide.classes = this.setCurSlideClasses(slide));\n    this.sendChanges();\n\n    this._invalidated = {};\n\n    if (!this.is('valid')) {\n      this.enter('valid');\n    }\n  }\n\n  /**\n   * Gets the width of the view.\n   * @param [dimension=Width.Default] The dimension to return\n   * @returns The width of the view in pixel.\n   */\n  width(dimension?: Width): number {\n    dimension = dimension || Width.Default;\n    switch (dimension) {\n      case Width.Inner:\n      case Width.Outer:\n        return this._width;\n      default:\n        return this._width - this.settings.stagePadding * 2 + this.settings.margin;\n    }\n  }\n\n  /**\n   * Refreshes the carousel primarily for adaptive purposes.\n   */\n  refresh() {\n    this.enter('refreshing');\n    this._trigger('refresh');\n    this._defineSlidesData();\n    this.setViewportItemsN();\n\n    this._optionsLogic();\n\n    // this.$element.addClass(this.options.refreshClass);\n\n    this.update();\n\n    // this.$element.removeClass(this.options.refreshClass);\n\n    this.leave('refreshing');\n    this._trigger('refreshed');\n  }\n\n  /**\n   * Checks window `resize` event.\n   * @param curWidth width of .owl-carousel\n   */\n  onResize(curWidth: number) {\n    if (!this._items.length) {\n      return false;\n    }\n\n    this.setCarouselWidth(curWidth);\n\n    this.enter('resizing');\n\n    // if (this.trigger('resize').isDefaultPrevented()) {\n    // \tthis.leave('resizing');\n    // \treturn false;\n    // }\n    this._trigger('resize');\n    this.invalidate('width');\n\n    this.refresh();\n\n    this.leave('resizing');\n    this._trigger('resized');\n  }\n\n  /**\n   * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\n   * @todo Horizontal swipe threshold as option\n   * @todo #261\n   * @param event - The event arguments.\n   * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\n   */\n  prepareDragging(event: any): Coords {\n    let stage: Coords = null,\n      transformArr: string[];\n\n    // could be 5 commented lines below; However there's stage transform in stageData and in updates after each move of stage\n    // stage = getComputedStyle(this.el.nativeElement).transform.replace(/.*\\(|\\)| /g, '').split(',');\n    // stage = {\n    //   x: stage[stage.length === 16 ? 12 : 4],\n    //   y: stage[stage.length === 16 ? 13 : 5]\n    // };\n\n    transformArr = this.stageData.transform.replace(/.*\\(|\\)| |[^,-\\d]\\w|\\)/g, '').split(',');\n    stage = {\n      x: +transformArr[0],\n      y: +transformArr[1]\n    };\n\n    if (this.is('animating')) {\n      this.invalidate('position');\n    }\n\n    if (event.type === 'mousedown') {\n      this.owlDOMData.isGrab = true;\n    }\n\n    this.speed(0);\n    return stage;\n  }\n\n  /**\n   * Enters into a 'dragging' state\n   */\n  enterDragging() {\n    this.enter('dragging');\n    this._trigger('drag');\n  }\n\n  /**\n   * Defines new coords for .owl-stage while dragging it\n   * @todo #261\n   * @param event the event arguments.\n   * @param dragData initial data got after starting dragging\n   * @returns coords or false\n   */\n  defineNewCoordsDrag(event: any, dragData: any): boolean | Coords {\n    let minimum = null,\n      maximum = null,\n      pull = null;\n    const delta = this.difference(dragData.pointer, this.pointer(event)),\n      stage = this.difference(dragData.stage.start, delta);\n\n    if (!this.is('dragging')) {\n      return false;\n    }\n\n    if (this.settings.loop) {\n      minimum = this.coordinates(this.minimum());\n      maximum = +this.coordinates(this.maximum() + 1) - minimum;\n      stage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;\n    } else {\n      minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\n      maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\n      pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\n      stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\n    }\n\n    return stage;\n  }\n\n  /**\n   * Finishes dragging of carousel when `touchend` and `mouseup` events fire.\n   * @todo #261\n   * @todo Threshold for click event\n   * @param event the event arguments.\n   * @param dragObj the object with dragging settings and states\n   * @param clickAttacher function which attaches click handler to slide or its children elements in order to prevent event bubling\n   */\n  finishDragging(event: any, dragObj: any, clickAttacher: () => void) {\n    const delta = this.difference(dragObj.pointer, this.pointer(event)),\n      stage = dragObj.stage.current,\n      direction = delta.x > +this.settings.rtl ? 'left' : 'right';\n    let currentSlideI: number, current: number, newCurrent: number;\n\n    if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\n      this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed);\n      currentSlideI = this.closest(stage.x, delta.x !== 0 ? direction : dragObj.direction);\n      current = this.current();\n      newCurrent = this.current(currentSlideI === -1 ? undefined : currentSlideI);\n\n      if (current !== newCurrent) {\n        this.invalidate('position');\n        this.update();\n      }\n\n      dragObj.direction = direction;\n\n      if (Math.abs(delta.x) > 3 || new Date().getTime() - dragObj.time > 300) {\n        clickAttacher();\n      }\n    }\n    if (!this.is('dragging')) {\n      return;\n    }\n    this.leave('dragging');\n    this._trigger('dragged')\n  }\n\n  /**\n   * Gets absolute position of the closest item for a coordinate.\n   * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\n   * @param coordinate The coordinate in pixel.\n   * @param direction The direction to check for the closest item. Ether `left` or `right`.\n   * @returns The absolute position of the closest item.\n   */\n  closest(coordinate: number, direction: string): number {\n    const pull = 30,\n      width = this.width();\n    let coordinates: number[] = this.coordinates() as number[],\n      position = -1;\n\n    if (this.settings.center) {\n      coordinates = coordinates.map(item => {\n        if (item === 0) {\n          item += 0.000001;\n        }\n        return item;\n      })\n    }\n\n    // option 'freeDrag' doesn't have realization and using it here creates problem:\n    // variable 'position' stays unchanged (it equals -1 at the begging) and thus method returns -1\n    // Returning value is consumed by method current(), which taking -1 as argument calculates the index of new current slide\n    // In case of having 5 slides ans 'loop=false; calling 'current(-1)' sets props '_current' as 4. Just last slide remains visible instead of 3 last slides.\n\n    // if (!this.settings.freeDrag) {\n    // check closest item\n    for (let i = 0; i < coordinates.length; i++) {\n\n      if (direction === 'left' && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\n        position = i;\n        // on a right pull, check on previous index\n        // to do so, subtract width from value and set position = index + 1\n      } else if (direction === 'right' && coordinate > coordinates[i] - width - pull && coordinate < coordinates[i] - width + pull) {\n        position = i + 1;\n      } else if (this._op(coordinate, '<', coordinates[i])\n        && this._op(coordinate, '>', coordinates[i + 1] || coordinates[i] - width)) {\n        position = direction === 'left' ? i + 1 : i;\n      } else if (direction === null && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\n        position = i;\n      }\n\n      if (position !== -1) {\n        break\n      }\n      ;\n    }\n    // }\n\n    if (!this.settings.loop) {\n      // non loop boundries\n      if (this._op(coordinate, '>', coordinates[this.minimum()])) {\n        position = coordinate = this.minimum();\n      } else if (this._op(coordinate, '<', coordinates[this.maximum()])) {\n        position = coordinate = this.maximum();\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Animates the stage.\n   * @todo #270\n   * @param coordinate The coordinate in pixels.\n   */\n  animate(coordinate: number | number[]) {\n    const animate = this.speed() > 0;\n\n    if (this.is('animating')) {\n      this.onTransitionEnd();\n    }\n\n    if (animate) {\n      this.enter('animating');\n      this._trigger('translate');\n    }\n\n    this.stageData.transform = 'translate3d(' + coordinate + 'px,0px,0px)';\n    this.stageData.transition = (this.speed() / 1000) + 's';\n\n    // also there was transition by means of JQuery.animate or css-changing property left\n  }\n\n  /**\n   * Checks whether the carousel is in a specific state or not.\n   * @param state The state to check.\n   * @returns The flag which indicates if the carousel is busy.\n   */\n  is(state: string): boolean {\n    return this._states.current[state] && this._states.current[state] > 0;\n  };\n\n  /**\n   * Sets the absolute position of the current item.\n   * @param position The new absolute position or nothing to leave it unchanged.\n   * @returns The absolute position of the current item.\n   */\n  current(position?: number): number {\n    if (position === undefined) {\n      return this._current;\n    }\n\n    if (this._items.length === 0) {\n      return undefined;\n    }\n\n    position = this.normalize(position);\n\n    if (this._current !== position) {\n      const event = this._trigger('change', {property: {name: 'position', value: position}});\n\n      // if (event.data !== undefined) {\n      // \tposition = this.normalize(event.data);\n      // }\n\n      this._current = position;\n\n      this.invalidate('position');\n      this._trigger('changed', {property: {name: 'position', value: this._current}});\n    }\n\n    return this._current;\n  }\n\n  /**\n   * Invalidates the given part of the update routine.\n   * @param part The part to invalidate.\n   * @returns The invalidated parts.\n   */\n  invalidate(part: string): string[] {\n    if (typeof part === 'string') {\n      this._invalidated[part] = true;\n      if (this.is('valid')) {\n        this.leave('valid');\n      }\n    }\n    return Object.keys(this._invalidated);\n  };\n\n  /**\n   * Resets the absolute position of the current item.\n   * @param position the absolute position of the new item.\n   */\n  reset(position: number) {\n    position = this.normalize(position);\n\n    if (position === undefined) {\n      return;\n    }\n\n    this._speed = 0;\n    this._current = position;\n\n    this._suppress(['translate', 'translated']);\n\n    this.animate(this.coordinates(position));\n\n    this._release(['translate', 'translated']);\n  }\n\n  /**\n   * Normalizes an absolute or a relative position of an item.\n   * @param position The absolute or relative position to normalize.\n   * @param relative Whether the given position is relative or not.\n   * @returns The normalized position.\n   */\n  normalize(position: number, relative?: boolean): number {\n    const n = this._items.length,\n      m = relative ? 0 : this._clones.length;\n\n    if (!this._isNumeric(position) || n < 1) {\n      position = undefined;\n    } else if (position < 0 || position >= n + m) {\n      position = ((position - m / 2) % n + n) % n + m / 2;\n    }\n\n    return position;\n  }\n\n  /**\n   * Converts an absolute position of an item into a relative one.\n   * @param position The absolute position to convert.\n   * @returns The converted position.\n   */\n  relative(position: number): number {\n    position -= this._clones.length / 2;\n    return this.normalize(position, true);\n  }\n\n  /**\n   * Gets the maximum position for the current item.\n   * @param relative Whether to return an absolute position or a relative position.\n   * @returns number of maximum position\n   */\n  maximum(relative: boolean = false): number {\n    const settings = this.settings;\n    let maximum = this._coordinates.length,\n      iterator,\n      reciprocalItemsWidth,\n      elementWidth;\n\n    if (settings.loop) {\n      maximum = this._clones.length / 2 + this._items.length - 1;\n    } else if (settings.autoWidth || settings.merge) {\n      iterator = this._items.length;\n      reciprocalItemsWidth = this.slidesData[--iterator].width;\n      elementWidth = this._width;\n      while (iterator--) {\n        // it could be use this._items instead of this.slidesData;\n        reciprocalItemsWidth += +this.slidesData[iterator].width + this.settings.margin;\n        if (reciprocalItemsWidth > elementWidth) {\n          break;\n        }\n      }\n      maximum = iterator + 1;\n    } else if (settings.center) {\n      maximum = this._items.length - 1;\n    } else {\n      maximum = this._items.length - settings.items;\n    }\n\n    if (relative) {\n      maximum -= this._clones.length / 2;\n    }\n\n    return Math.max(maximum, 0);\n  }\n\n  /**\n   * Gets the minimum position for the current item.\n   * @param relative Whether to return an absolute position or a relative position.\n   * @returns number of minimum position\n   */\n  minimum(relative: boolean = false): number {\n    return relative ? 0 : this._clones.length / 2;\n  }\n\n  /**\n   * Gets an item at the specified relative position.\n   * @param position The relative position of the item.\n   * @returns The item at the given position or all items if no position was given.\n   */\n  items(position?: number): CarouselSlideDirective[] {\n    if (position === undefined) {\n      return this._items.slice();\n    }\n\n    position = this.normalize(position, true);\n    return [this._items[position]];\n  }\n\n  /**\n   * Gets an item at the specified relative position.\n   * @param position The relative position of the item.\n   * @returns The item at the given position or all items if no position was given.\n   */\n  mergers(position: number): number | number[] {\n    if (position === undefined) {\n      return this._mergers.slice();\n    }\n\n    position = this.normalize(position, true);\n    return this._mergers[position];\n  }\n\n  /**\n   * Gets the absolute positions of clones for an item.\n   * @param position The relative position of the item.\n   * @returns The absolute positions of clones for the item or all if no position was given.\n   */\n  clones(position?: number): number[] {\n    const odd = this._clones.length / 2,\n      even = odd + this._items.length,\n      map = index => index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2;\n\n    if (position === undefined) {\n      return this._clones.map((v, i) => map(i));\n    }\n\n    return this._clones.map((v, i) => v === position ? map(i) : null).filter(item => item);\n  }\n\n  /**\n   * Sets the current animation speed.\n   * @param speed The animation speed in milliseconds or nothing to leave it unchanged.\n   * @returns The current animation speed in milliseconds.\n   */\n  speed(speed?: number): number {\n    if (speed !== undefined) {\n      this._speed = speed;\n    }\n\n    return this._speed;\n  }\n\n  /**\n   * Gets the coordinate of an item.\n   * @todo The name of this method is missleanding.\n   * @param position The absolute position of the item within `minimum()` and `maximum()`.\n   * @returns The coordinate of the item in pixel or all coordinates.\n   */\n  coordinates(position?: number): number | number[] {\n    let multiplier = 1,\n      newPosition = position - 1,\n      coordinate,\n      result: number[];\n\n    if (position === undefined) {\n      result = this._coordinates.map((item, index) => {\n        return this.coordinates(index) as number;\n      });\n      return result;\n    }\n\n    if (this.settings.center) {\n      if (this.settings.rtl) {\n        multiplier = -1;\n        newPosition = position + 1;\n      }\n\n      coordinate = this._coordinates[position];\n      coordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\n    } else {\n      coordinate = this._coordinates[newPosition] || 0;\n    }\n\n    coordinate = Math.ceil(coordinate);\n\n    return coordinate;\n  }\n\n  /**\n   * Calculates the speed for a translation.\n   * @param from The absolute position of the start item.\n   * @param to The absolute position of the target item.\n   * @param factor [factor=undefined] - The time factor in milliseconds.\n   * @returns The time in milliseconds for the translation.\n   */\n  private _duration(from: number, to: number, factor?: number | boolean): number {\n    if (factor === 0) {\n      return 0;\n    }\n\n    return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((+factor || this.settings.smartSpeed));\n  }\n\n  /**\n   * Slides to the specified item.\n   * @param position The position of the item.\n   * @param speed The time in milliseconds for the transition.\n   */\n  to(position: number, speed: number | boolean) {\n    let current = this.current(),\n      revert = null,\n      distance = position - this.relative(current),\n      maximum = this.maximum();\n    const direction = +(distance > 0) - +(distance < 0),\n      items = this._items.length,\n      minimum = this.minimum();\n\n    if (this.settings.loop) {\n      if (!this.settings.rewind && Math.abs(distance) > items / 2) {\n        distance += direction * -1 * items;\n      }\n\n      position = current + distance;\n      revert = ((position - minimum) % items + items) % items + minimum;\n\n      if (revert !== position && revert - distance <= maximum && revert - distance > 0) {\n        current = revert - distance;\n        position = revert;\n        this.reset(current);\n        this.sendChanges();\n      }\n    } else if (this.settings.rewind) {\n      maximum += 1;\n      position = (position % maximum + maximum) % maximum;\n    } else {\n      position = Math.max(minimum, Math.min(maximum, position));\n    }\n\n    setTimeout(() => {\n      this.speed(this._duration(current, position, speed));\n      this.current(position);\n\n      this.update();\n    }, 0);\n\n  }\n\n  /**\n   * Slides to the next item.\n   * @param speed The time in milliseconds for the transition.\n   */\n  next(speed: number | boolean) {\n    speed = speed || false;\n    this.to(this.relative(this.current()) + 1, speed);\n  }\n\n  /**\n   * Slides to the previous item.\n   * @param speed The time in milliseconds for the transition.\n   */\n  prev(speed: number | boolean) {\n    speed = speed || false;\n    this.to(this.relative(this.current()) - 1, speed);\n  }\n\n  /**\n   * Handles the end of an animation.\n   * @param event - The event arguments.\n   */\n  onTransitionEnd(event?: any) {\n    // if css2 animation then event object is undefined\n    if (event !== undefined) {\n      // event.stopPropagation();\n\n      // // Catch only owl-stage transitionEnd event\n      // if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)\t) {\n      // \treturn false;\n      // }\n      return false;\n    }\n    this.leave('animating');\n    this._trigger('translated');\n  }\n\n  /**\n   * Gets viewport width.\n   * @returns - The width in pixel.\n   */\n  private _viewport(): number {\n    let width;\n    if (this._width) {\n      width = this._width;\n    } else {\n      console.warn('Can not detect viewport width.');\n    }\n    return width;\n  }\n\n  /**\n   * Sets _items\n   * @param content The list of slides put into CarouselSlideDirectives.\n   */\n  setItems(content: CarouselSlideDirective[]) {\n    this._items = content;\n  }\n\n  /**\n   * Sets slidesData using this._items\n   */\n  private _defineSlidesData() {\n    // Maybe creating and using loadMap would be better in LazyLoadService.\n    // Hovewer in that case when 'resize' event fires, prop 'load' of all slides will get 'false' and such state of prop will be seen by View during its updating. Accordingly the code will remove slides's content from DOM even if it was loaded before.\n    // Thus it would be needed to add that content into DOM again.\n    // In order to avoid additional removing/adding loaded slides's content we use loadMap here and set restore state of prop 'load' before the View will get it.\n    let loadMap: Map<string, boolean>;\n\n    if (this.slidesData && this.slidesData.length) {\n      loadMap = new Map();\n      this.slidesData.forEach(item => {\n        if (item.load) {\n          loadMap.set(item.id, item.load);\n        }\n      })\n    }\n\n    this.slidesData = this._items.map(slide => {\n      return {\n        id: `${slide.id}`,\n        isActive: false,\n        tplRef: slide.tplRef,\n        dataMerge: slide.dataMerge,\n        width: 0,\n        isCloned: false,\n        load: loadMap ? loadMap.get(slide.id) : false,\n        hashFragment: slide.dataHash\n      };\n    });\n  }\n\n  /**\n   * Sets current classes for slide\n   * @param slide Slide of carousel\n   * @returns object with names of css-classes which are keys and true/false values\n   */\n  setCurSlideClasses(slide: SlideModel): {[key: string]: boolean} {\n    // CSS classes: added/removed per current state of component properties\n    let currentClasses: {[key: string]: boolean} = {\n      'active': slide.isActive,\n      'center': slide.isCentered,\n      'cloned': slide.isCloned,\n      'animated': slide.isAnimated,\n      'owl-animated-in': slide.isDefAnimatedIn,\n      'owl-animated-out': slide.isDefAnimatedOut\n    };\n\n    currentClasses = Object.assign(currentClasses, slide.classes);\n\n    if (this.settings.animateIn) {\n      currentClasses[this.settings.animateIn as string] = slide.isCustomAnimatedIn;\n    }\n    if (this.settings.animateOut) {\n      currentClasses[this.settings.animateOut as string] = slide.isCustomAnimatedOut;\n    }\n    return currentClasses;\n  }\n\n  /**\n   * Operators to calculate right-to-left and left-to-right.\n   * @param a - The left side operand.\n   * @param o - The operator.\n   * @param b - The right side operand.\n   * @returns true/false meaning right-to-left or left-to-right\n   */\n  private _op(a: number, o: string, b: number): boolean {\n    const rtl = this.settings.rtl;\n    switch (o) {\n      case '<':\n        return rtl ? a > b : a < b;\n      case '>':\n        return rtl ? a < b : a > b;\n      case '>=':\n        return rtl ? a <= b : a >= b;\n      case '<=':\n        return rtl ? a >= b : a <= b;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Triggers a public event.\n   * @todo Remove `status`, `relatedTarget` should be used instead.\n   * @param name The event name.\n   * @param data The event data.\n   * @param namespace The event namespace.\n   * @param state The state which is associated with the event.\n   * @param enter Indicates if the call enters the specified state or not.\n   */\n  private _trigger(name: string, data?: any, namespace?: string, state?: string, enter?: boolean) {\n    switch (name) {\n      case 'initialized':\n        this._initializedCarousel$.next(name);\n        break;\n      case 'change':\n        this._changeSettingsCarousel$.next(data);\n        break;\n      case 'changed':\n        this._changedSettingsCarousel$.next(data);\n        break;\n      case 'drag':\n        this._dragCarousel$.next(name);\n        break;\n      case 'dragged':\n        this._draggedCarousel$.next(name);\n        break;\n      case 'resize':\n        this._resizeCarousel$.next(name);\n        break;\n      case 'resized':\n        this._resizedCarousel$.next(name);\n        break;\n      case 'refresh':\n        this._refreshCarousel$.next(name);\n        break;\n      case 'refreshed':\n        this._refreshedCarousel$.next(name);\n        break;\n      case 'translate':\n        this._translateCarousel$.next(name);\n        break;\n      case 'translated':\n        this._translatedCarousel$.next(name);\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  /**\n   * Enters a state.\n   * @param name - The state name.\n   */\n  enter(name: string) {\n    [name].concat(this._states.tags[name] || []).forEach((stateName) => {\n      if (this._states.current[stateName] === undefined) {\n        this._states.current[stateName] = 0;\n      }\n\n      this._states.current[stateName]++;\n    });\n  };\n\n  /**\n   * Leaves a state.\n   * @param name - The state name.\n   */\n  leave(name: string) {\n    [name].concat(this._states.tags[name] || []).forEach((stateName) => {\n      if (this._states.current[stateName] === 0 || !!this._states.current[stateName]) {\n        this._states.current[stateName]--;\n      }\n    })\n  };\n\n  /**\n   * Registers an event or state.\n   * @param object - The event or state to register.\n   */\n  register(object: any) {\n    if (object.type === Type.State) {\n      if (!this._states.tags[object.name]) {\n        this._states.tags[object.name] = object.tags;\n      } else {\n        this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\n      }\n\n      this._states.tags[object.name] = this._states.tags[object.name].filter((tag, i) => {\n        return this._states.tags[object.name].indexOf(tag) === i;\n      });\n    }\n  }\n\n  /**\n   * Suppresses events.\n   * @param events The events to suppress.\n   */\n  private _suppress(events: string[]) {\n    events.forEach(event => {\n      this._supress[event] = true;\n    });\n  }\n\n  /**\n   * Releases suppressed events.\n   * @param events The events to release.\n   */\n  private _release(events: string[]) {\n    events.forEach(event => {\n      delete this._supress[event];\n    });\n  }\n\n  /**\n   * Gets unified pointer coordinates from event.\n   * @todo #261\n   * @param event The `mousedown` or `touchstart` event.\n   * @returns Object Coords which contains `x` and `y` coordinates of current pointer position.\n   */\n  pointer(event: any): Coords {\n    const result = {x: null, y: null};\n\n    event = event.originalEvent || event || window.event;\n\n    event = event.touches && event.touches.length ?\n      event.touches[0] : event.changedTouches && event.changedTouches.length ?\n        event.changedTouches[0] : event;\n\n    if (event.pageX) {\n      result.x = event.pageX;\n      result.y = event.pageY;\n    } else {\n      result.x = event.clientX;\n      result.y = event.clientY;\n    }\n\n    return result;\n  }\n\n  /**\n   * Determines if the input is a Number or something that can be coerced to a Number\n   * @param number The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number\n   */\n  private _isNumeric(number: any): boolean {\n    return !isNaN(parseFloat(number));\n  }\n\n  /**\n   * Determines whether value is number or boolean type\n   * @param value The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number, or Boolean\n   */\n  private _isNumberOrBoolean(value: number | boolean): boolean {\n    return this._isNumeric(value) || typeof value === 'boolean';\n  }\n\n  /**\n   * Determines whether value is number or string type\n   * @param value The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number, or String\n   */\n  private _isNumberOrString(value: number | string): boolean {\n    return this._isNumeric(value) || typeof value === 'string';\n  }\n\n  /**\n   * Determines whether value is number or string type\n   * @param value The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number, or String\n   */\n  private _isStringOrBoolean(value: number | string): boolean {\n    return typeof value === 'string' || typeof value === 'boolean';\n  }\n\n  /**\n   * Gets the difference of two vectors.\n   * @todo #261\n   * @param first The first vector.\n   * @param second- The second vector.\n   * @returns The difference.\n   */\n  difference(first: Coords, second: Coords): Coords {\n    return {\n      x: first.x - second.x,\n      y: first.y - second.y\n    };\n  }\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { NavData, DotsData } from '../models/navigation-data.models';\nimport { CarouselSlideDirective } from '../carousel/carousel.module';\nimport { CarouselService } from './carousel.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { merge } from 'rxjs/observable/merge';\nimport { tap, filter } from 'rxjs/operators';\nimport { OwlOptions } from '../models/owl-options.model';\n\n@Injectable()\nexport class NavigationService implements OnDestroy {\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  navSubscription: Subscription;\n\n  /**\n   * Indicates whether the plugin is initialized or not.\n   */\n  protected _initialized = false;\n\n  /**\n   * The current paging indexes.\n   */\n  protected _pages: any[] = [];\n\n  /**\n   * Data for navigation elements of the user interface.\n   */\n  protected _navData: NavData = {\n    disabled: false,\n    prev: {\n      disabled: false,\n      htmlText: ''\n    },\n    next: {\n      disabled: false,\n      htmlText: ''\n    },\n  };\n\n  /**\n   * Data for dot elements of the user interface.\n   */\n  protected _dotsData: DotsData = {\n    disabled: false,\n    dots: []\n  };\n\n  constructor(private carouselService: CarouselService) {\n    this.spyDataStreams();\n  }\n\n  ngOnDestroy() {\n    this.navSubscription.unsubscribe();\n  }\n\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$: Observable<string> = this.carouselService.getInitializedState().pipe(\n      tap(state => {\n        this.initialize();\n        this._updateNavPages();\n        this.draw();\n        this.update();\n        this.carouselService.sendChanges();\n      })\n    );\n\n    // mostly changes in carouselService and carousel at all causes carouselService.to(). It moves stage right-left by its code and calling needed functions\n    // Thus this method by calling carouselService.current(position) notifies about changes\n    const changedSettings$: Observable<any> = this.carouselService.getChangedState().pipe(\n      filter(data => data.property.name === 'position'),\n      tap(data => {\n        this.update();\n        // should be the call of the function written at the end of comment\n        // but the method carouselServive.to() has setTimeout(f, 0) which contains carouselServive.update() which calls sendChanges() method.\n        // carouselService.navData and carouselService.dotsData update earlier than carouselServive.update() gets called\n        // updates of carouselService.navData and carouselService.dotsData are being happening withing carouselService.current(position) method which calls next() of _changedSettingsCarousel$\n        // carouselService.current(position) is being calling earlier than carouselServive.update();\n        // this.carouselService.sendChanges();\n      })\n    );\n\n    const refreshedCarousel$: Observable<string> = this.carouselService.getRefreshedState().pipe(\n      tap(() => {\n        this._updateNavPages();\n        this.draw();\n        this.update();\n        this.carouselService.sendChanges();\n      })\n    );\n\n    const navMerge$: Observable<string> = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\n    this.navSubscription = navMerge$.subscribe(\n      () => {}\n    );\n  }\n\n  /**\n\t * Initializes the layout of the plugin and extends the carousel.\n\t */\n\tinitialize() {\n    this._navData.disabled = true;\n    this._navData.prev.htmlText = this.carouselService.settings.navText[0];\n    this._navData.next.htmlText = this.carouselService.settings.navText[1];\n\n    this._dotsData.disabled = true;\n\n    this.carouselService.navData = this._navData;\n    this.carouselService.dotsData = this._dotsData;\n  }\n\n  /**\n   * Calculates internal states and updates prop _pages\n   */\n\tprivate _updateNavPages() {\n\t\tlet i: number, j: number, k: number;\n\t\tconst lower: number = this.carouselService.clones().length / 2,\n      upper: number = lower + this.carouselService.items().length,\n      maximum: number = this.carouselService.maximum(true),\n      pages: any[] = [],\n      settings: OwlOptions = this.carouselService.settings;\n     let size = settings.center || settings.autoWidth || settings.dotsData\n        ? 1 : settings.dotsEach || settings.items;\n      size = +size;\n\t\tif (settings.slideBy !== 'page') {\n\t\t\tsettings.slideBy = Math.min(+settings.slideBy, settings.items);\n\t\t}\n\n\t\tif (settings.dots || settings.slideBy === 'page') {\n\n\t\t\tfor (i = lower, j = 0, k = 0; i < upper; i++) {\n\t\t\t\tif (j >= size || j === 0) {\n\t\t\t\t\tpages.push({\n\t\t\t\t\t\tstart: Math.min(maximum, i - lower),\n\t\t\t\t\t\tend: i - lower + size - 1\n\t\t\t\t\t});\n\t\t\t\t\tif (Math.min(maximum, i - lower) === maximum) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tj = 0, ++k;\n\t\t\t\t}\n\t\t\t\tj += this.carouselService.mergers(this.carouselService.relative(i)) as number;\n\t\t\t}\n\t\t}\n\t\tthis._pages = pages;\n\t}\n\n  /**\n\t * Draws the user interface.\n\t * @todo The option `dotsData` wont work.\n\t */\n  draw() {\n\t\tlet difference: number;\n    const\tsettings: OwlOptions = this.carouselService.settings,\n      items: CarouselSlideDirective[] = this.carouselService.items(),\n      disabled = items.length <= settings.items;\n\n\t\tthis._navData.disabled = !settings.nav || disabled;\n\t\tthis._dotsData.disabled = !settings.dots || disabled;\n\n\t\tif (settings.dots) {\n\t\t\tdifference = this._pages.length - this._dotsData.dots.length;\n\n\t\t\tif (settings.dotsData && difference !== 0) {\n        this._dotsData.dots = [];\n        items.forEach(item => {\n          this._dotsData.dots.push({\n            active: false,\n            id: `dot-${item.id}`,\n            innerContent: item.dotContent,\n            showInnerContent: true\n          });\n        });\n\t\t\t} else if (difference > 0) {\n        const startI: number = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;\n        for (let i = 0; i < difference; i++) {\n          this._dotsData.dots.push({\n            active: false,\n            id: `dot-${i + startI}`,\n            showInnerContent: false\n          });\n        }\n\t\t\t} else if (difference < 0) {\n        this._dotsData.dots.splice(difference, Math.abs(difference))\n\t\t\t}\n    }\n\n    this.carouselService.navData = this._navData;\n    this.carouselService.dotsData = this._dotsData;\n  };\n\n  /**\n   * Updates navigation buttons's and dots's states\n   */\n  update() {\n    this._updateNavButtons();\n    this._updateDots();\n  }\n\n  /**\n   * Changes state of nav buttons (disabled, enabled)\n   */\n  private _updateNavButtons() {\n    const\tsettings: OwlOptions = this.carouselService.settings,\n      loop: boolean = settings.loop || settings.rewind,\n      index: number = this.carouselService.relative(this.carouselService.current());\n\n    if (settings.nav) {\n      this._navData.prev.disabled = !loop && index <= this.carouselService.minimum(true);\n\t\t\tthis._navData.next.disabled = !loop && index >= this.carouselService.maximum(true);\n    }\n\n    this.carouselService.navData = this._navData;\n  }\n\n  /**\n   * Changes active dot if page becomes changed\n   */\n  private _updateDots() {\n    let curActiveDotI: number;\n    this._dotsData.dots.forEach(item => {\n      if (item.active === true) {\n        item.active = false;\n      }\n    })\n\n    curActiveDotI = this._current();\n    if (this._dotsData.dots.length) {\n      this._dotsData.dots[curActiveDotI].active = true;\n    }\n    this.carouselService.dotsData = this._dotsData;\n  }\n\n  /**\n\t * Gets the current page position of the carousel.\n\t * @returns the current page position of the carousel\n\t */\n\tprivate _current(): any {\n    const current: number = this.carouselService.relative(this.carouselService.current());\n    let finalCurrent: number;\n    const pages: any = this._pages.filter((page, index) => {\n      return page.start <= current && page.end >= current;\n    }).pop();\n\n    finalCurrent = this._pages.findIndex(page => {\n      return page.start === pages.start && page.end === pages.end;\n    });\n\n    return finalCurrent;\n  };\n\n  /**\n\t * Gets the current succesor/predecessor position.\n   * @param sussessor position of slide\n\t * @returns the current succesor/predecessor position\n\t */\n\tprivate _getPosition(successor: number | boolean): number {\n\t\tlet position: number, length: number;\n\t\tconst\tsettings: OwlOptions = this.carouselService.settings;\n\n\t\tif (settings.slideBy === 'page') {\n\t\t\tposition = this._current();\n\t\t\tlength = this._pages.length;\n\t\t\tsuccessor ? ++position : --position;\n\t\t\tposition = this._pages[((position % length) + length) % length].start;\n\t\t} else {\n\t\t\tposition = this.carouselService.relative(this.carouselService.current());\n\t\t\tlength = this.carouselService.items().length;\n\t\t\tsuccessor ? position += +settings.slideBy : position -= +settings.slideBy;\n\t\t}\n\n\t\treturn position;\n  };\n\n  /**\n\t * Slides to the next item or page.\n\t * @param speed The time in milliseconds for the transition.\n\t */\n\tnext(speed: number | boolean) {\n    this.carouselService.to(this._getPosition(true), speed);\n\t};\n\n\t/**\n\t * Slides to the previous item or page.\n\t * @param speed The time in milliseconds for the transition.\n\t */\n\tprev(speed: number | boolean) {\n    this.carouselService.to(this._getPosition(false), speed);\n  };\n\n \t/**\n\t * Slides to the specified item or page.\n\t * @param position - The position of the item or page.\n\t * @param speed - The time in milliseconds for the transition.\n\t * @param standard - Whether to use the standard behaviour or not. Default meaning false\n\t */\n\tto(position: number, speed: number | boolean, standard?: boolean) {\n\t\tlet length: number;\n\t\tif (!standard && this._pages.length) {\n      length = this._pages.length;\n      this.carouselService.to(this._pages[((position % length) + length) % length].start, speed);\n\t\t} else {\n      this.carouselService.to(position, speed);\n\t\t}\n  };\n\n  /**\n   * Moves carousel after user's clicking on any dots\n   */\n  moveByDot(dotId: string) {\n    const index: number = this._dotsData.dots.findIndex(dot => dotId === dot.id);\n    this.to(index, this.carouselService.settings.dotsSpeed);\n  }\n\n  /**\n   * rewinds carousel to slide with needed id\n   * @param id id of slide\n   */\n  toSlideById(id: string) {\n    const position = this.carouselService.slidesData.findIndex(slide => slide.id === id && slide.isCloned === false);\n\n    if (position === -1 || position === this.carouselService.current()) {\n      return;\n    }\n\n\t\tthis.carouselService.to(this.carouselService.relative(position), false);\n  }\n\n}\n","// import { Injectable } from '@angular/core';\n// function _window(): any {\n//    // return the global native browser window object\n//    return window;\n// }\n// @Injectable()\n// export class WindowRefService {\n//    get nativeWindow(): any {\n//       return _window();\n//    }\n// }\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  ClassProvider,\n  FactoryProvider,\n  InjectionToken,\n  PLATFORM_ID\n} from '@angular/core';\n\n/**\n * Create a new injection token for injecting the window into a component.\n */\nexport const WINDOW = new InjectionToken('WindowToken');\n\n/**\n * Define abstract class for obtaining reference to the global window object.\n */\nexport abstract class WindowRef {\n  get nativeWindow(): Window | Object {\n    throw new Error('Not implemented.');\n  }\n}\n\n/**\n * Define class that implements the abstract class and returns the native window object.\n */\nexport class BrowserWindowRef extends WindowRef {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @returns window object\n   */\n  get nativeWindow(): Window | Object {\n    return window;\n  }\n}\n\n/**\n * Create an factory function that returns the native window object.\n * @param browserWindowRef Native window object\n * @param platformId id of platform\n * @returns type of platform of empty object\n */\nexport function windowFactory(\n  browserWindowRef: BrowserWindowRef,\n  platformId: Object\n): Window | Object {\n  if (isPlatformBrowser(platformId)) {\n    return browserWindowRef.nativeWindow;\n  }\n  return new Object();\n}\n\n/**\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\n */\nexport const browserWindowProvider: ClassProvider = {\n  provide: WindowRef,\n  useClass: BrowserWindowRef\n};\n\n/**\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\n */\nexport const windowProvider: FactoryProvider = {\n  provide: WINDOW,\n  useFactory: windowFactory,\n  deps: [WindowRef, PLATFORM_ID]\n};\n\n/**\n * Create an array of providers.\n */\nexport const WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  ClassProvider,\n  FactoryProvider,\n  InjectionToken,\n  PLATFORM_ID,\n} from '@angular/core';\n\n/**\n * Create a new injection token for injecting the Document into a component.\n */\nexport const DOCUMENT = new InjectionToken<Document>('DocumentToken');\n/**\n * Define abstract class for obtaining reference to the global Document object.\n */\nexport abstract class DocumentRef {\n  get nativeDocument(): Document | Object {\n    throw new Error('Not implemented.');\n  }\n}\n\n/**\n * Define class that implements the abstract class and returns the native Document object.\n */\nexport class BrowserDocumentRef extends DocumentRef {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @returns Document object\n   */\n  get nativeDocument(): Document | Object {\n    return document;\n  }\n}\n\n/**\n * Create an factory function that returns the native Document object.\n * @param browserDocumentRef Native Document object\n * @param platformId id of platform\n * @returns type of platform of empty object\n */\nexport function documentFactory(\n  browserDocumentRef: BrowserDocumentRef,\n  platformId: Object\n): Document | Object {\n  if (isPlatformBrowser(platformId)) {\n    return browserDocumentRef.nativeDocument;\n  }\n  return new Object();\n}\n\n/**\n * Create a injectable provider for the DocumentRef token that uses the BrowserDocumentRef class.\n */\nexport const browserDocumentProvider: ClassProvider = {\n  provide: DocumentRef,\n  useClass: BrowserDocumentRef\n};\n\n/**\n * Create an injectable provider that uses the DocumentFactory function for returning the native Document object.\n */\nexport const documentProvider: FactoryProvider = {\n  provide: DOCUMENT,\n  useFactory: documentFactory,\n  deps: [DocumentRef, PLATFORM_ID]\n};\n\n/**\n * Create an array of providers.\n */\nexport const DOCUMENT_PROVIDERS = [browserDocumentProvider, documentProvider];\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { merge } from 'rxjs/observable/merge';\nimport { CarouselService } from './carousel.service';\nimport { tap } from 'rxjs/operators';\nimport { WINDOW } from './window-ref.service';\nimport { DOCUMENT } from './document-ref.service';\n\n@Injectable()\nexport class AutoplayService implements OnDestroy{\n  /**\n   * Subscrioption to merge Observables from CarouselService\n   */\n  autoplaySubscription: Subscription;\n\n  /**\n   * The autoplay timeout.\n   */\n  private _timeout: number = null;\n\n  /**\n   * Indicates whenever the autoplay is paused.\n   */\n  private _paused = false;\n\n  private winRef: Window;\n  private docRef: Document;\n\n  constructor(private carouselService: CarouselService,\n              @Inject(WINDOW) winRef: any,\n              @Inject(DOCUMENT) docRef: any,\n  ) {\n    this.winRef = winRef as Window;\n    this.docRef = docRef as Document;\n    this.spyDataStreams();\n  }\n\n  ngOnDestroy() {\n    this.autoplaySubscription.unsubscribe();\n  }\n\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$: Observable<string> = this.carouselService.getInitializedState().pipe(\n      tap(() => {\n        if (this.carouselService.settings.autoplay) {\n\t\t\t\t\tthis.play();\n\t\t\t\t}\n      })\n    );\n\n    const changedSettings$: Observable<any> = this.carouselService.getChangedState().pipe(\n      tap(data => {\n        this._handleChangeObservable(data);\n      })\n    );\n\n    // original Autoplay Plugin has listeners on play.owl.core and stop.owl.core events.\n    // They are triggered by Video Plugin\n\n    const autoplayMerge$: Observable<string> = merge(initializedCarousel$, changedSettings$);\n    this.autoplaySubscription = autoplayMerge$.subscribe(\n      () => {}\n    );\n  }\n\n  /**\n\t * Starts the autoplay.\n\t * @param timeout The interval before the next animation starts.\n\t * @param speed The animation speed for the animations.\n\t */\n\tplay(timeout?: number, speed?: number) {\n    if (this._paused) {\n\t\t\tthis._paused = false;\n\t\t\tthis._setAutoPlayInterval();\n    }\n\n\t\tif (this.carouselService.is('rotating')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.carouselService.enter('rotating');\n\n\t\tthis._setAutoPlayInterval();\n  };\n\n  /**\n\t * Gets a new timeout\n\t * @param timeout - The interval before the next animation starts.\n\t * @param speed - The animation speed for the animations.\n\t * @return\n\t */\n\tprivate _getNextTimeout(timeout?: number, speed?: number): number {\n\t\tif ( this._timeout ) {\n\t\t\tthis.winRef.clearTimeout(this._timeout);\n\t\t}\n\t\treturn this.winRef.setTimeout(() =>{\n      if (this._paused || this.carouselService.is('busy') || this.carouselService.is('interacting') || this.docRef.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.carouselService.next(speed || this.carouselService.settings.autoplaySpeed);\n    }, timeout || this.carouselService.settings.autoplayTimeout);\n  };\n\n  /**\n\t * Sets autoplay in motion.\n\t */\n\tprivate _setAutoPlayInterval() {\n\t\tthis._timeout = this._getNextTimeout();\n\t};\n\n\t/**\n\t * Stops the autoplay.\n\t */\n\tstop() {\n\t\tif (!this.carouselService.is('rotating')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.winRef.clearTimeout(this._timeout);\n\t\tthis.carouselService.leave('rotating');\n  };\n\n  /**\n\t * Stops the autoplay.\n\t */\n\tpause() {\n\t\tif (!this.carouselService.is('rotating')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._paused = true;\n  };\n\n  /**\n   * Manages by autoplaying according to data passed by _changedSettingsCarousel$ Obsarvable\n   * @param data object with current position of carousel and type of change\n   */\n  private _handleChangeObservable(data) {\n    if (data.property.name === 'settings') {\n      if (this.carouselService.settings.autoplay) {\n        this.play();\n      } else {\n        this.stop();\n      }\n    } else if (data.property.name === 'position') {\n      //console.log('play?', e);\n      if (this.carouselService.settings.autoplay) {\n        this._setAutoPlayInterval();\n      }\n    }\n  }\n\n  /**\n   * Starts pausing\n   */\n  startPausing() {\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n      this.pause();\n    }\n  }\n\n  /**\n   * Starts playing after mouse leaves carousel\n   */\n  startPlayingMouseLeave() {\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n      this.pause();\n    }\n  }\n\n  /**\n   * Starts playing after touch ends\n   */\n  startPlayingTouchEnd() {\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n      this.pause();\n    }\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { merge } from 'rxjs/observable/merge';\nimport { CarouselService } from './carousel.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LazyLoadService implements OnDestroy {\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  lazyLoadSubscription: Subscription;\n\n  constructor(private carouselService: CarouselService) {\n    this.spyDataStreams();\n  }\n\n  ngOnDestroy() {\n    this.lazyLoadSubscription.unsubscribe();\n  }\n\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$: Observable<string> = this.carouselService.getInitializedState().pipe(\n      tap(() => {\n        const isLazyLoad = this.carouselService.settings && !this.carouselService.settings.lazyLoad;\n        this.carouselService.slidesData.forEach(item => item.load = isLazyLoad ? true : false);\n      })\n    );\n\n    const changeSettings$: Observable<any> = this.carouselService.getChangeState();\n\n    const resizedCarousel$: Observable<string> = this.carouselService.getResizedState();\n\n\n    const lazyLoadMerge$: Observable<string | any> = merge(initializedCarousel$, changeSettings$, resizedCarousel$).pipe(\n      tap(data => this._defineLazyLoadSlides(data)),\n      // tap(() => this.carouselService.sendChanges())\n    );\n    this.lazyLoadSubscription = lazyLoadMerge$.subscribe(\n      () => {}\n    );\n  }\n\n  private _defineLazyLoadSlides(data: any) {\n    if (!this.carouselService.settings || !this.carouselService.settings.lazyLoad) {\n      return;\n    }\n\n    if ((data.property && data.property.name === 'position') || data === 'initialized' || data === \"resized\") {\n      const settings = this.carouselService.settings,\n            clones = this.carouselService.clones().length;\n      let n = (settings.center && Math.ceil(settings.items / 2) || settings.items),\n          i = ((settings.center && n * -1) || 0),\n          position = (data.property && data.property.value !== undefined ? data.property.value : this.carouselService.current()) + i;\n        // load = $.proxy(function(i, v) { this.load(v) }, this);\n      //TODO: Need documentation for this new option\n      if (settings.lazyLoadEager > 0) {\n        n += settings.lazyLoadEager;\n        // If the carousel is looping also preload images that are to the \"left\"\n        if (settings.loop) {\n          position -= settings.lazyLoadEager;\n          n++;\n        }\n      }\n\n      while (i++ < n) {\n        this._load(clones / 2 + this.carouselService.relative(position));\n        if (clones) {\n          this.carouselService.clones(this.carouselService.relative(position)).forEach(value => this._load(value));\n\n        }\n        position++;\n      }\n    }\n  }\n\n  /**\n\t * Loads all resources of an item at the specified position.\n\t * @param position - The absolute position of the item.\n\t */\n  private _load(position: number) {\n    if (this.carouselService.slidesData[position].load) {\n      return;\n    }\n\n    this.carouselService.slidesData[position].load = true;\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { merge } from 'rxjs/observable/merge';\nimport { CarouselService } from './carousel.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AnimateService implements OnDestroy{\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  animateSubscription: Subscription;\n\n  /**\n   * s\n   */\n  swapping = true;\n\n  /**\n   * active slide before translating\n   */\n  previous = undefined;\n\n  /**\n   * new active slide after translating\n   */\n  next = undefined;\n\n  constructor(private carouselService: CarouselService) {\n    this.spyDataStreams();\n  }\n\n  ngOnDestroy() {\n    this.animateSubscription.unsubscribe();\n  }\n\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const changeSettings$: Observable<any> = this.carouselService.getChangeState().pipe(\n      tap(data => {\n        if (data.property.name === 'position') {\n\t\t\t\t\tthis.previous = this.carouselService.current();\n\t\t\t\t\tthis.next = data.property.value;\n\t\t\t\t}\n      })\n    );\n\n    const dragCarousel$: Observable<string> = this.carouselService.getDragState();\n    const draggedCarousel$: Observable<string> = this.carouselService.getDraggedState();\n    const translatedCarousel$: Observable<string> = this.carouselService.getTranslatedState();\n\n    const dragTranslatedMerge$: Observable<string> = merge(dragCarousel$, draggedCarousel$, translatedCarousel$).pipe(\n      tap(data => this.swapping = data === 'translated')\n    );\n\n    const translateCarousel$: Observable<string> = this.carouselService.getTranslateState().pipe(\n      tap(data => {\n        if (this.swapping && (this.carouselService._options.animateOut || this.carouselService._options.animateIn)) {\n          this._swap();\n        }\n      })\n    );\n\n    const animateMerge$: Observable<string | any> = merge(changeSettings$, translateCarousel$, dragTranslatedMerge$).pipe();\n    this.animateSubscription = animateMerge$.subscribe(\n      () => {}\n    );\n  }\n\n  /**\n\t * Toggles the animation classes whenever an translations starts.\n\t * @returns\n\t */\n\tprivate _swap(): boolean {\n\n\t\tif (this.carouselService.settings.items !== 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if (!$.support.animation || !$.support.transition) {\n\t\t// \treturn;\n\t\t// }\n\n\t\tthis.carouselService.speed(0);\n\n\t\tlet left;\n\t\tconst\tprevious = this.carouselService.slidesData[this.previous],\n\t\t\tnext = this.carouselService.slidesData[this.next],\n\t\t\tincoming = this.carouselService.settings.animateIn,\n\t\t\toutgoing = this.carouselService.settings.animateOut;\n\n\t\tif (this.carouselService.current() === this.previous) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (outgoing) {\n\t\t\tleft = +this.carouselService.coordinates(this.previous) - +this.carouselService.coordinates(this.next);\n      this.carouselService.slidesData.forEach(slide => {\n        if (slide.id === previous.id) {\n          slide.left = `${left}px`;\n          slide.isAnimated = true;\n          slide.isDefAnimatedOut = true;\n          slide.isCustomAnimatedOut = true;\n        }\n      });\n\t\t}\n\n\t\tif (incoming) {\n      this.carouselService.slidesData.forEach(slide => {\n        if (slide.id === next.id) {\n          slide.isAnimated = true;\n          slide.isDefAnimatedIn = true;\n          slide.isCustomAnimatedIn = true;\n        }\n      });\n\t\t}\n\t};\n\n  /**\n   * Handles the end of 'animationend' event\n   * @param id Id of slides\n   */\n  clear(id) {\n    this.carouselService.slidesData.forEach(slide => {\n      if (slide.id === id) {\n        slide.left = '';\n        slide.isAnimated = false;\n        slide.isDefAnimatedOut = false;\n        slide.isCustomAnimatedOut = false;\n        slide.isDefAnimatedIn = false;\n        slide.isCustomAnimatedIn = false;\n        slide.classes = this.carouselService.setCurSlideClasses(slide);\n      }\n    });\n    this.carouselService.onTransitionEnd();\n\t};\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { merge } from 'rxjs/observable/merge';\nimport { CarouselService } from './carousel.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AutoHeightService implements OnDestroy{\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  autoHeightSubscription: Subscription;\n  constructor(private carouselService: CarouselService) {\n    this.spyDataStreams();\n  }\n\n  ngOnDestroy() {\n    this.autoHeightSubscription.unsubscribe();\n  }\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$: Observable<string> = this.carouselService.getInitializedState().pipe(\n      tap(data => {\n        if (this.carouselService.settings.autoHeight) {\n          this.update();\n        } else {\n          this.carouselService.slidesData.forEach(slide => slide.heightState = 'full');\n        }\n      })\n    );\n\n    const changedSettings$: Observable<any> = this.carouselService.getChangedState().pipe(\n      tap(data => {\n        if (this.carouselService.settings.autoHeight && data.property.name === 'position'){\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n      })\n    );\n\n    const refreshedCarousel$: Observable<string> = this.carouselService.getRefreshedState().pipe(\n      tap(data => {\n        if (this.carouselService.settings.autoHeight) {\n          this.update();\n        }\n      })\n    );\n\n    const autoHeight$: Observable<string | any> = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\n    this.autoHeightSubscription = autoHeight$.subscribe(\n      () => {}\n    );\n  }\n\n  /**\n   * Updates the prop 'heightState' of slides\n   */\n  update() {\n    const items = this.carouselService.settings.items\n    let start = this.carouselService.current(),\n        end = start + items;\n\n    if (this.carouselService.settings.center) {\n      start = items % 2 === 1 ? start - (items - 1) / 2 : start - items / 2;\n      end = items % 2 === 1 ? start + items : start + items + 1;\n    }\n\n    this.carouselService.slidesData.forEach((slide, i) => {\n      slide.heightState = (i >= start && i < end) ? 'full' : 'nulled';\n    });\n  }\n\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { merge } from 'rxjs/observable/merge';\nimport { CarouselService } from './carousel.service';\nimport { tap, skip } from 'rxjs/operators';\n\n@Injectable()\nexport class HashService implements OnDestroy {\n  /**\n   * Subscription to merge Observable from CarouselService\n   */\n  hashSubscription: Subscription;\n\n  /**\n   * Current url fragment (hash)\n   */\n  currentHashFragment: string;\n\n  constructor(private carouselService: CarouselService) {\n    this.spyDataStreams();\n  }\n\n  ngOnDestroy() {\n    this.hashSubscription.unsubscribe();\n  }\n\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$: Observable<string> = this.carouselService.getInitializedState();\n\n    const changedSettings$: Observable<any> = this.carouselService.getChangedState().pipe(\n      tap(data => {\n        if (this.carouselService.settings.URLhashListener && data.property.name === 'position') {\n          const newCurSlide = this.carouselService.current();\n          const newCurFragment = this.carouselService.slidesData[newCurSlide].hashFragment;\n\n          if (!newCurFragment || newCurFragment === this.currentHashFragment) {\n\t\t\t\t\t\treturn;\n          }\n        }\n      })\n    );\n\n    const hashFragment$: Observable<string | any> = merge(initializedCarousel$, changedSettings$);\n    this.hashSubscription = hashFragment$.subscribe(\n      () => {}\n    );\n  }\n\n  /**\n   * rewinds carousel to slide which has the same hashFragment as fragment of current url\n   * @param fragment fragment of url\n   */\n  rewind(fragment: string) {\n    const position = this.carouselService.slidesData.findIndex(slide => slide.hashFragment === fragment && slide.isCloned === false);\n\n    if (position === -1 || position === this.carouselService.current()) {\n      return;\n    }\n\n\t\tthis.carouselService.to(this.carouselService.relative(position), false);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  AfterContentChecked,\n  OnDestroy,\n  Input,\n  Output,\n  Directive,\n  QueryList,\n  ContentChildren,\n  TemplateRef,\n  ElementRef,\n  AfterContentInit,\n  EventEmitter\n} from '@angular/core';\n\nimport { Subscription, Observable } from 'rxjs';\n\nimport { ResizeService } from '../services/resize.service';\nimport { tap, delay, filter } from 'rxjs/operators';\nimport { CarouselService, CarouselCurrentData } from '../services/carousel.service';\nimport { StageData } from \"../models/stage-data.model\";\nimport { OwlDOMData } from \"../models/owlDOM-data.model\";\nimport { SlideModel } from '../models/slide.model';\nimport { OwlOptions } from '../models/owl-options.model';\nimport { NavData, DotsData } from '../models/navigation-data.models';\nimport { NavigationService } from '../services/navigation.service';\nimport { AutoplayService } from '../services/autoplay.service';\nimport { LazyLoadService } from '../services/lazyload.service';\nimport { AnimateService } from '../services/animate.service';\nimport { AutoHeightService } from '../services/autoheight.service';\nimport { HashService } from '../services/hash.service';\nimport { merge } from 'rxjs/observable/merge';\n\nlet nextId = 0;\n\n@Directive({selector: 'ng-template[carouselSlide]'})\nexport class CarouselSlideDirective {\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n  @Input() id = `owl-slide-${nextId++}`;\n\n  /**\n   * Defines how much widths of common slide will current slide have\n   * e.g. if _mergeData=2, the slide will twice wider then slides with _mergeData=1\n   */\n  private _dataMerge = 1;\n  @Input()\n  set dataMerge(data: number) {\n    this._dataMerge = this.isNumeric(data) ? data : 1;\n  };\n\n  get dataMerge(): number {\n    return this._dataMerge\n  }\n\n  /**\n   * Width of slide\n   */\n  @Input() width = 0;\n\n  /**\n   * Inner content of dot for certain slide; can be html-markup\n   */\n  @Input() dotContent = '';\n\n  /**\n   * Hash (fragment) of url which corresponds to certain slide\n   */\n  @Input() dataHash = '';\n\n  constructor(public tplRef: TemplateRef<any>) {\n  }\n\n  /**\n   * Determines if the input is a Number or something that can be coerced to a Number\n   * @param - The input to be tested\n   * @returns - An indication if the input is a Number or can be coerced to a Number\n   */\n  isNumeric(number: any): boolean {\n    return !isNaN(parseFloat(number));\n  }\n}\n\n/**\n * Data which will be passed out after ending of transition of carousel\n */\nexport class SlidesOutputData {\n  startPosition?: number;\n  slides?: SlideModel[];\n};\n\n@Component({\n  selector: 'owl-carousel-o',\n  template: `\n    <div class=\"owl-carousel owl-theme\" #owlCarousel\n         [ngClass]=\"{'owl-rtl': owlDOMData?.rtl,\n                  'owl-loaded': owlDOMData?.isLoaded,\n                  'owl-responsive': owlDOMData?.isResponsive,\n                  'owl-drag': owlDOMData?.isMouseDragable,\n                  'owl-grab': owlDOMData?.isGrab}\"\n         (mouseover)=\"startPausing()\"\n         (mouseleave)=\"startPlayML()\"\n         (touchstart)=\"startPausing()\"\n         (touchend)=\"startPlayTE()\">\n\n      <div *ngIf=\"carouselLoaded\" class=\"owl-stage-outer\">\n        <owl-stage\n          [owlDraggable]=\"{'isMouseDragable': owlDOMData?.isMouseDragable, 'isTouchDragable': owlDOMData?.isTouchDragable}\"\n          [stageData]=\"stageData\"\n          [slidesData]=\"slidesData\"></owl-stage>\n      </div> <!-- /.owl-stage-outer -->\n      <div class=\"owl-nav\" [ngClass]=\"{'disabled': navData?.disabled}\">\n        <div class=\"owl-prev\" [ngClass]=\"{'disabled': navData?.prev?.disabled}\" (click)=\"prev()\"\n             [innerHTML]=\"navData?.prev?.htmlText\"></div>\n        <div class=\"owl-next\" [ngClass]=\"{'disabled': navData?.next?.disabled}\" (click)=\"next()\"\n             [innerHTML]=\"navData?.next?.htmlText\"></div>\n      </div> <!-- /.owl-nav -->\n      <div class=\"owl-dots\" [ngClass]=\"{'disabled': dotsData?.disabled}\">\n        <div *ngFor=\"let dot of dotsData?.dots\" class=\"owl-dot\"\n             [ngClass]=\"{'active': dot.active, 'owl-dot-text': dot.showInnerContent}\" (click)=\"moveByDot(dot.id)\">\n          <span [innerHTML]=\"dot.innerContent\"></span>\n        </div>\n      </div> <!-- /.owl-dots -->\n    </div> <!-- /.owl-carousel owl-loaded -->\n  `,\n  styles: [`.owl-theme {\n      display: block;\n  }`],\n  providers: [\n    NavigationService,\n    AutoplayService,\n    CarouselService,\n    LazyLoadService,\n    AnimateService,\n    AutoHeightService,\n    HashService\n  ]\n})\nexport class CarouselComponent\n  implements OnInit, AfterContentChecked, AfterContentInit, OnDestroy {\n  @ContentChildren(CarouselSlideDirective)\n  slides: QueryList<CarouselSlideDirective>;\n\n  @Output() translated = new EventEmitter<SlidesOutputData>();\n\n  /**\n   * Width of carousel window (tag with class .owl-carousel), in wich we can see moving sliders\n   */\n  carouselWindowWidth: number;\n\n  /**\n   * Subscription to 'resize' event\n   */\n  resizeSubscription: Subscription;\n\n  /**\n   * Subscription merge Observable, which merges all Observables in the component except 'resize' Observable\n   */\n  private _allObservSubscription: Subscription;\n\n  /**\n   * Current settings for the carousel.\n   */\n  owlDOMData: OwlDOMData;\n\n  /**\n   * Data of owl-stage\n   */\n  stageData: StageData;\n\n  /**\n   *  Data of every slide\n   */\n  slidesData: SlideModel[];\n\n  /**\n   * Data of navigation block\n   */\n  navData: NavData;\n\n  /**\n   * Data of dots block\n   */\n  dotsData: DotsData;\n\n  /**\n   * Data, wich are passed out of carousel after ending of transioning of carousel\n   */\n  slidesOutputData: SlidesOutputData;\n\n  /**\n   * Shows whether carousel is loaded of not.\n   */\n  carouselLoaded = false;\n\n  /**\n   * User's options\n   */\n  @Input() options: OwlOptions;\n\n  /**\n   * Observable for getting current View Settings\n   */\n  private _viewCurSettings$: Observable<CarouselCurrentData>;\n\n  /**\n   * Observable for catching the end of transition of carousel\n   */\n  private _translatedCarousel$: Observable<string>;\n\n  /**\n   * Observable for merging all Observables and creating one subscription\n   */\n  private _carouselMerge$: Observable<CarouselCurrentData | string>;\n\n  constructor(\n    private el: ElementRef,\n    private resizeService: ResizeService,\n    private carouselService: CarouselService,\n    private navigationService: NavigationService,\n    private autoplayService: AutoplayService,\n    private lazyLoadService: LazyLoadService,\n    private animateService: AnimateService,\n    private autoHeightService: AutoHeightService,\n    private hashService: HashService\n  ) {\n    // empty\n  }\n\n  ngOnInit() {\n    this.spyDataStreams();\n\n    this.carouselWindowWidth = this.el.nativeElement.querySelector(\n      '.owl-carousel'\n    ).clientWidth;\n  }\n\n  ngAfterContentChecked() {\n  }\n\n  // ngAfterContentChecked() END\n\n  ngAfterContentInit() {\n    this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\n    this.carouselService.initialize(this.slides.toArray());\n\n    this._winResizeWatcher();\n  }\n\n  ngOnDestroy() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n\n    this._allObservSubscription.unsubscribe();\n  }\n\n  /**\n   * Joins the observable login in one place: sets values to some observables, merges this observables and\n   * subcribes to merge func\n   */\n  spyDataStreams() {\n    this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe(\n      tap(data => {\n        this.owlDOMData = data.owlDOMData;\n        this.stageData = data.stageData;\n        this.slidesData = data.slidesData;\n        if (!this.carouselLoaded) {\n          this.carouselLoaded = true;\n        }\n        this.navData = data.navData;\n        this.dotsData = data.dotsData;\n      })\n    );\n\n    this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe(\n      tap(() => {\n        this.gatherTranslatedData();\n        this.translated.emit(this.slidesOutputData);\n        this.slidesOutputData = {};\n      })\n    );\n\n    this._carouselMerge$ = merge(this._viewCurSettings$, this._translatedCarousel$);\n    this._allObservSubscription = this._carouselMerge$.subscribe(() => {\n    });\n  }\n\n  /**\n   * Init subscription to resize event and attaches handler for this event\n   */\n  private _winResizeWatcher() {\n    if (Object.keys(this.carouselService._options.responsive).length) {\n      this.resizeSubscription = this.resizeService.onResize$\n        .pipe(\n          filter(() => this.carouselWindowWidth !== this.el.nativeElement.querySelector('.owl-carousel').clientWidth),\n          delay(this.carouselService.settings.responsiveRefreshRate)\n        )\n        .subscribe(() => {\n          this.carouselService.onResize(this.el.nativeElement.querySelector('.owl-carousel').clientWidth);\n          this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\n        });\n    }\n  }\n\n  /**\n   * Handler for transitioend event\n   */\n  onTransitionEnd() {\n    this.carouselService.onTransitionEnd();\n  }\n\n  /**\n   * Handler for click event, attached to next button\n   */\n  next() {\n    this.navigationService.next(this.carouselService.settings.navSpeed);\n  }\n\n  /**\n   * Handler for click event, attached to prev button\n   */\n  prev() {\n    this.navigationService.prev(this.carouselService.settings.navSpeed);\n  }\n\n  /**\n   * Handler for click event, attached to dots\n   */\n  moveByDot(dotId: string) {\n    this.navigationService.moveByDot(dotId);\n  }\n\n  /**\n   * rewinds carousel to slide with needed id\n   * @param id fragment of url\n   */\n  to(id: string) {\n    this.navigationService.toSlideById(id);\n  }\n\n  /**\n   * Gathers and prepares data intended for passing to the user by means of firing event translatedCarousel\n   */\n  gatherTranslatedData() {\n    let startPosition: number;\n    const clonedIdPrefix = this.carouselService.clonedIdPrefix;\n    const activeSlides: SlideModel[] = this.slidesData\n      .filter(slide => slide.isActive === true)\n      .map(slide => {\n        const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\n        return {\n          id: id,\n          width: slide.width,\n          marginL: slide.marginL,\n          marginR: slide.marginR,\n          center: slide.isCentered\n        }\n      });\n    startPosition = this.carouselService.relative(this.carouselService.current());\n    this.slidesOutputData = {\n      startPosition: startPosition,\n      slides: activeSlides\n    }\n  }\n\n  /**\n   * Starts pausing\n   */\n  startPausing() {\n    this.autoplayService.startPausing();\n  }\n\n  /**\n   * Starts playing after mouse leaves carousel\n   */\n  startPlayML() {\n    this.autoplayService.startPlayingMouseLeave();\n  }\n\n  /**\n   * Starts playing after touch ends\n   */\n  startPlayTE() {\n    this.autoplayService.startPlayingTouchEnd();\n  }\n\n}\n","import { Component, NgZone, ElementRef, HostListener, Renderer2, OnInit, OnDestroy, Input } from '@angular/core';\nimport { CarouselService, Coords } from '../../services/carousel.service';\nimport { Subject, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { StageData } from '../../models/stage-data.model';\nimport { SlideModel } from '../../models/slide.model';\nimport { AnimateService } from '../../services/animate.service';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n@Component({\n  selector: 'owl-stage',\n  template: `\n    <div>\n      <div class=\"owl-stage\" [ngStyle]=\"{'width': stageData.width + 'px',\n                                        'transform': stageData.transform,\n                                        'transition': stageData.transition,\n                                        'padding-left': stageData.paddingL + 'px',\n                                        'padding-right': stageData.paddingR + 'px' }\"\n          (transitionend)=\"onTransitionEnd()\">\n        <ng-container *ngFor=\"let slide of slidesData; let i = index\">\n          <div class=\"owl-item\" [ngClass]=\"slide.classes\"\n                                [ngStyle]=\"{'width': slide.width + 'px',\n                                            'margin-left': slide.marginL + 'px',\n                                            'margin-right': slide.marginR + 'px',\n                                            'left': slide.left}\"\n                                (animationend)=\"clear(slide.id)\"\n                                [@autoHeight]=\"slide.heightState\">\n            <ng-template *ngIf=\"slide.load\" [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n          </div><!-- /.owl-item -->\n        </ng-container>\n      </div><!-- /.owl-stage -->\n    </div>\n  `,\n  animations: [\n    trigger('autoHeight', [\n      state('nulled', style({height: 0})),\n      state('full', style({height: '*'})),\n      transition('full => nulled', [\n        // style({height: '*'}),\n        animate('700ms 350ms')\n      ]),\n      transition('nulled => full', [\n        // style({height: 0}),\n        animate(350)\n      ]),\n    ])\n  ]\n})\nexport class StageComponent implements OnInit, OnDestroy {\n  /**\n   * Object with settings which make carousel draggable by touch or mouse\n   */\n  @Input() owlDraggable: {\n    isMouseDragable: boolean,\n    isTouchDragable: boolean\n  };\n\n  /**\n   * Data of owl-stage\n   */\n  @Input() stageData: StageData;\n\n\t/**\n\t *  Data of every slide\n\t */\n  @Input() slidesData: SlideModel[];\n\n  /**\n   * Function wich will be returned after attaching listener to 'mousemove' event\n   */\n  listenerMouseMove: () => void;\n  /**\n   * Function wich will be returned after attaching listener to 'touchmove' event\n   */\n  listenerTouchMove: () => void;\n  /**\n   * Function wich will be returned after attaching listener to 'mousemove' event\n   */\n  listenerOneMouseMove: () => void;\n  /**\n   * Function wich will be returned after attaching listener to 'touchmove' event\n   */\n  listenerOneTouchMove: () => void;\n\n  /**\n   * Function wich will be returned after attaching listener to 'mouseup' event\n   */\n  listenerMouseUp: () => void;\n  /**\n   * Function wich will be returned after attaching listener to 'touchend' event\n   */\n  listenerTouchEnd: () => void;\n\n  /**\n   * Function wich will be returned after attaching listener to 'click' event\n   */\n  listenerOneClick: () => void;\n\n  /**\n   * Object with data needed for dragging\n   */\n  private _drag: any = {\n    time: null,\n    target: null,\n    pointer: null,\n    stage: {\n      start: null,\n      current: null\n    },\n    direction: null,\n    active: false,\n    moving: false\n  };\n\n  /**\n   * Subject for notification when the carousel's rebuilding caused by resize event starts\n   */\n  private _oneDragMove$ = new Subject<any>();\n\n  /**\n   * Subsctiption to _oneDragMove$ Subject\n   */\n  private _oneMoveSubsription: Subscription;\n\n  constructor(private zone: NgZone,\n              private el: ElementRef,\n              private renderer: Renderer2,\n              private carouselService: CarouselService,\n              private animateService: AnimateService) { }\n\n  @HostListener('mousedown', ['$event']) onMouseDown(event) {\n    if (this.owlDraggable.isMouseDragable) {\n      this._onDragStart(event);\n    }\n  }\n\n  @HostListener('touchstart', ['$event']) onTouchStart(event) {\n    if (this.owlDraggable.isTouchDragable) {\n      this._onDragStart(event);\n    }\n  }\n\n  @HostListener('touchcancel', ['$event']) onTouchCancel(event) {\n    this._onDragEnd(event);\n  }\n\n  @HostListener('dragstart') onDragStart() {\n    if (this.owlDraggable.isMouseDragable) {\n      return false;\n    }\n  }\n\n  @HostListener('selectstart') onSelectStart() {\n    if (this.owlDraggable.isMouseDragable) {\n      return false;\n    }\n  }\n\n  ngOnInit() {\n    this._oneMoveSubsription = this._oneDragMove$\n      .pipe(first())\n      .subscribe(() => {\n        this._sendChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this._oneMoveSubsription.unsubscribe();\n  }\n\n  /**\n   * Passes this to _oneMouseTouchMove();\n   */\n  bindOneMouseTouchMove = (ev) => {\n    this._oneMouseTouchMove(ev);\n  }\n\n  /**\n   * Passes this to _onDragMove();\n   */\n  bindOnDragMove = (ev) => {\n    this._onDragMove(ev);\n  }\n\n  /**\n   * Passes this to _onDragMove();\n   */\n  bindOnDragEnd = (ev) => {\n    // this.zone.run(() => {\n      this._onDragEnd(ev);\n    // });\n  }\n\n  /**\n\t * Handles `touchstart` and `mousedown` events.\n\t * @todo Horizontal swipe threshold as option\n\t * @todo #261\n\t * @param event - The event arguments.\n\t */\n\tprivate _onDragStart(event): any {\n\t\tlet stage: Coords = null;\n\n\t\tif (event.which === 3) {\n\t\t\treturn;\n    }\n\n    stage = this._prepareDragging(event);\n\n\t\tthis._drag.time = new Date().getTime();\n\t\tthis._drag.target = event.target;\n\t\tthis._drag.stage.start = stage;\n\t\tthis._drag.stage.current = stage;\n    this._drag.pointer = this._pointer(event);\n    this._drag.active = true;\n\n    this.listenerMouseUp = this.renderer.listen(document, 'mouseup', this.bindOnDragEnd);\n    this.listenerTouchEnd = this.renderer.listen(document, 'touchend', this.bindOnDragEnd);\n\n    this.zone.runOutsideAngular(() => {\n      this.listenerOneMouseMove = this.renderer.listen(document, 'mousemove', this.bindOneMouseTouchMove);\n      this.listenerOneTouchMove = this.renderer.listen(document, 'touchmove', this.bindOneMouseTouchMove);\n    });\n\n  }\n\n  /**\n   * Attaches listeners to `touchmove` and `mousemove` events; initiates updating carousel after starting dragging\n   * @param event event objech of mouse or touch event\n   */\n  private _oneMouseTouchMove(event) {\n    if (!this._drag.active) return false;\n    const delta = this._difference(this._drag.pointer, this._pointer(event));\n\n    this.listenerOneMouseMove();\n    this.listenerOneTouchMove();\n\n    if (Math.abs(delta.x) < Math.abs(delta.y) && this._is('valid')) {\n      this._drag.active = false;\n      return;\n    }\n    this._drag.moving = true;\n\n    this.listenerMouseMove = this.renderer.listen(document, 'mousemove', this.bindOnDragMove);\n    this.listenerTouchMove = this.renderer.listen(document, 'touchmove', this.bindOnDragMove);\n\n    event.preventDefault();\n\n    this._enterDragging();\n    this._oneDragMove$.next(event);\n    // this._sendChanges();\n  }\n\n  \t/**\n\t * Handles the `touchmove` and `mousemove` events.\n\t * @todo #261\n\t * @param event - The event arguments.\n\t */\n\tprivate _onDragMove(event) {\n    if (!this._drag.active) return false;\n\n    let stage: Coords;\n    const stageOrExit: boolean | Coords = this.carouselService.defineNewCoordsDrag(event, this._drag);\n\n    if (stageOrExit === false) {\n      return;\n    }\n    stage = stageOrExit as Coords;\n\n\t\tevent.preventDefault();\n\n    this._drag.stage.current = stage;\n\t\tthis._animate(stage.x - this._drag.stage.start.x);\n  };\n\n  /**\n   * Moves .owl-stage left-right\n   * @param coordinate coordinate to be set to .owl-stage\n   */\n  private _animate(coordinate: number) {\n    this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', `translate3d(${coordinate}px,0px,0px`);\n    this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', '0s');\n  }\n\n  /**\n\t * Handles the `touchend` and `mouseup` events.\n\t * @todo #261\n\t * @todo Threshold for click event\n\t * @param event - The event arguments.\n\t */\n\tprivate _onDragEnd(event) {\n    this.carouselService.owlDOMData.isGrab = false;\n\n    if (this._drag.moving) {\n      this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', ``);\n      this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed)/1000 +'s');\n\n      this._finishDragging(event);\n      this.listenerMouseMove();\n      this.listenerTouchMove();\n    }\n\n    this._drag = {\n      time: null,\n      target: null,\n      pointer: null,\n      stage: {\n        start: null,\n        current: null\n      },\n      direction: null,\n      active: false,\n      moving: false\n    };\n\n    // this.carouselService.trigger('dragged');\n    this.listenerMouseUp();\n    this.listenerTouchEnd();\n  };\n\n  /**\n\t * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\n\t * @param event - The event arguments.\n\t * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\n\t */\n  private _prepareDragging(event: any): Coords {\n    return this.carouselService.prepareDragging(event);\n  }\n\n  /**\n   * Attaches handler for 'click' event on any element in .owl-stage in order to prevent dragging when moving of cursor is less than 3px\n   */\n  private _oneClickHandler = () => {\n    this.listenerOneClick = this.renderer.listen(this._drag.target, 'click', () => false)\n    this.listenerOneClick();\n  }\n\n  /**\n   * Finishes dragging\n   * @param event object event of 'mouseUp' of 'touchend' events\n   */\n  private _finishDragging(event: any) {\n    this.carouselService.finishDragging(event, this._drag, this._oneClickHandler);\n  }\n\n  /**\n\t * Gets unified pointer coordinates from event.\n\t * @param event The `mousedown` or `touchstart` event.\n\t * @returns Contains `x` and `y` coordinates of current pointer position.\n\t */\n  private _pointer(event: any): any {\n    return this.carouselService.pointer(event);\n  }\n\n  /**\n\t * Gets the difference of two vectors.\n\t * @param first The first vector.\n\t * @param second- The second vector.\n\t * @returns The difference.\n\t */\n  private _difference(firstC: Coords, second: Coords): any {\n    return this.carouselService.difference(firstC, second);\n  }\n\n  /**\n\t * Checks whether the carousel is in a specific state or not.\n\t * @param state The state to check.\n\t * @returns The flag which indicates if the carousel is busy.\n\t */\n  private _is(state: string): boolean {\n    return this.carouselService.is(state);\n  }\n\n  /**\n  * Enters a state.\n  * @param name The state name.\n  */\n  private _enter(name: string) {\n    this.carouselService.enter(name);\n  }\n\n  /**\n\t * Sends all data needed for View.\n\t */\n  private _sendChanges() {\n    this.carouselService.sendChanges();\n  }\n\n  /**\n   * Handler for transitioend event\n   */\n  onTransitionEnd() {\n    this.carouselService.onTransitionEnd();\n  }\n\n  /**\n\t * Enters into a 'dragging' state\n\t */\n  private _enterDragging() {\n    this.carouselService.enterDragging();\n  }\n\n  /**\n   * Handles the end of 'animationend' event\n   * @param id Id of slides\n   */\n  clear(id) {\n    this.animateService.clear(id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  CarouselComponent,\n  CarouselSlideDirective\n} from './carousel.component';\nimport { WINDOW_PROVIDERS } from '../services/window-ref.service';\nimport { ResizeService } from '../services/resize.service';\nimport { DOCUMENT_PROVIDERS } from '../services/document-ref.service';\nimport { StageComponent } from './stage/stage.component';\nexport {\n  CarouselComponent,\n  CarouselSlideDirective,\n  SlidesOutputData\n} from './carousel.component';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes)],\n  declarations: [CarouselComponent, CarouselSlideDirective, StageComponent],\n  exports: [CarouselComponent, CarouselSlideDirective],\n  providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS]\n})\nexport class CarouselModule {}\n"]}